name,url,category,subcategory,instructors,description,enrollment,views,rating,raters
3D Reconstruction - Multiple Viewpoints,https://www.coursera.org/learn/3d-reconstruction-multiple-viewpoints,Computer Science,Algorithms,Shree Nayar,"This course focuses on the recovery of the 3D structure of a scene from images taken from different viewpoints. We start by first building a comprehensive geometric model of a camera and then develop a method for finding (calibrating) the internal and external parameters of the camera model. Then, we show how two such calibrated cameras, whose relative positions and orientations are known, can be used to recover the 3D structure of the scene. This is what we refer to as simple binocular stereo. Next, we tackle the problem of uncalibrated stereo where the relative positions and orientations of the two cameras are unknown. Interestingly, just from the two images taken by the cameras, we can both determine the relative positions and orientations of the cameras and then use this information to estimate the 3D structure of the scene. 

Next, we focus on the problem of dynamic scenes. Given two images of a scene that includes moving objects, we show how the motion of each point in the image can be computed. This apparent motion of points in the image is called optical flow. Optical flow estimation allows us to track scene points over a video sequence. Next, we consider the video of a scene shot using a moving camera, where the motion of the camera is unknown. We present structure from motion that takes as input tracked features in such a video and determines not only the 3D structure of the scene but also how the camera moves with respect to the scene. The methods we develop in the course are widely used in object modeling, 3D site modeling, robotics, autonomous navigation, virtual reality and augmented reality.",,7022.0,4.7,12.0
3D Reconstruction - Single Viewpoint,https://www.coursera.org/learn/3d-reconstruction---single-viewpoint,Computer Science,Algorithms,Shree Nayar,"This course focuses on the recovery of the 3D structure of a scene from its 2D images. In particular, we are interested in the 3D reconstruction of a rigid scene from images taken by a stationary camera (same viewpoint). This problem is interesting as we want the multiple images of the scene to capture complementary information despite the fact that the scene is rigid and the camera is fixed. To this end, we explore several ways of capturing images where each image provides additional information about the scene.

In order to estimate scene properties (depth, surface orientation, material properties, etc.) we first define several important radiometric concepts, such as, light source intensity, surface illumination, surface brightness, image brightness and surface reflectance. Then, we tackle the challenging problem of shape from shading - recovering the shape of a surface from its shading in a single image. Next, we show that if multiple images of a scene of known reflectance are taken while changing the illumination direction, the surface normal at each scene point can be computed. This method, called photometric stereo, provides a dense surface normal map that can be integrated to obtain surface shape. 

Next, we discuss depth from defocus, which uses the limited depth of field of the camera to estimate scene structure. From a small number of images taken by changing the focus setting of the lens, a dense depth of the scene is recovered. Finally, we present a suite of techniques that use active illumination (the projection of light patterns onto the scene) to get precise 3D reconstructions of the scene. These active illumination methods are the workhorse of factory automation. They are used on manufacturing lines to assemble products and inspect their visual quality. They are also extensively used in other domains such as driverless cars, robotics, surveillance, medical imaging and special effects in movies.",1582.0,7928.0,4.9,10.0
Advanced Algorithms and Complexity,https://www.coursera.org/learn/advanced-algorithms-and-complexity,Computer Science,Algorithms,"Neil Rhodes, Daniel M Kane, Michael Levin, Alexander S. Kulikov","In previous courses of our online specialization you've learned the basic algorithms, and now you are ready to step into the area of more complex problems and algorithms to solve them. Advanced algorithms build upon basic ones and use new ideas. We will start with networks flows which are used in more typical applications such as optimal matchings, finding disjoint paths and flight scheduling as well as more surprising ones like image segmentation in computer vision. We then proceed to linear programming with applications in optimizing budget allocation, portfolio optimization, finding the cheapest diet satisfying all requirements and many others. Next we discuss inherently hard problems for which no exact good solutions are known (and not likely to be found) and how to solve them in practice. We finish with a soft introduction to streaming algorithms that are heavily used in Big Data processing. Such algorithms are usually designed to be able to process huge datasets without being able even to store a dataset.",72705.0,22007.0,4.6,644.0
Advanced Data Structures in Java,https://www.coursera.org/learn/advanced-data-structures,Computer Science,Algorithms,"Leo Porter, Mia Minnes, Christine Alvarado","How does Google Maps plan the best route for getting around town given current traffic conditions?  How does an internet router forward packets of network traffic to minimize delay?  How does an aid group allocate resources to its affiliated local partners?

To solve such problems, we first represent the key pieces of data in a complex data structure. In this course, you’ll learn about data structures, like graphs, that are fundamental for working with structured real world data.  You will develop, implement, and analyze algorithms for working with this data to solve real world problems.   In addition, as the programs you develop in this course become more complex, we’ll examine what makes for good code and class hierarchy design so that you can not only write correct code, but also share it with other people and maintain it in the future.

The backbone project in this course will be a route planning application.  You will apply the concepts from each Module directly to building an application that allows an autonomous agent (or a human driver!) to navigate its environment.  And as usual we have our different video series to help tie the content back to its importance in the real world and to provide tiered levels of support to meet your personal needs.",76582.0,20288.0,4.8,1219.0
Algorithmic Toolbox,https://www.coursera.org/learn/algorithmic-toolbox,Computer Science,Algorithms,"Neil Rhodes, Daniel M Kane, Michael Levin, Michael Levin, Pavel  Pevzner, Alexander S. Kulikov","This online course covers basic algorithmic techniques and ideas for computational problems arising frequently in practical applications: sorting and searching, divide and conquer, greedy algorithms, dynamic programming. We will learn a lot of theory: how to sort data and how it helps for searching; how to break a large problem into pieces and solve them recursively; when it makes sense to proceed greedily; how dynamic programming is used in genomic studies. You will practice solving computational problems, designing new algorithms, and implementing solutions efficiently (so that they run in less than a second).",458584.0,375670.0,4.6,12026.0
"Algorithms for Searching, Sorting, and Indexing",https://www.coursera.org/learn/algorithms-searching-sorting-indexing,Computer Science,Algorithms,Sriram Sankaranarayanan,"This course covers basics of algorithm design and analysis, as well as algorithms for sorting arrays, data structures such as priority queues, hash functions, and applications such as Bloom filters.

Algorithms for Searching, Sorting, and Indexing can be taken for academic credit as part of CU Boulder’s Master of Science in Data Science (MS-DS) degree offered on the Coursera platform. The MS-DS is an interdisciplinary degree that brings together faculty from CU Boulder’s departments of Applied Mathematics, Computer Science, Information Science, and others. With performance-based admissions and no application process, the MS-DS is ideal for individuals with a broad range of undergraduate education and/or professional experience in computer science, information science, mathematics, and statistics. Learn more about the MS-DS program at https://www.coursera.org/degrees/master-of-science-data-science-boulder.",17093.0,87630.0,4.7,198.0
Algorithms on Graphs,https://www.coursera.org/learn/algorithms-on-graphs,Computer Science,Algorithms,"Neil Rhodes, Daniel M Kane, Michael Levin, Michael Levin, Alexander S. Kulikov","If you have ever used a navigation service to find optimal route and estimate time to destination, you've used algorithms on graphs. Graphs arise in various real-world situations as there are road networks, computer networks and, most recently, social networks! If you're looking for the fastest time to get to work, cheapest way to connect a set of computers into a network or efficient algorithm to automatically find communities and opinion leaders in Facebook, you're going to work with graphs and algorithms on graphs.

In this online course, you will first learn what a graph is and what are some of the most important properties. Then you'll learn several ways to traverse graphs and how you can do useful things while traversing the graph in some order. We will then talk about shortest paths algorithms — from the basic ones to those which open door for 1000000 times faster algorithms used in Google Maps and other navigational services. You will use these algorithms if you choose to work on our Fast Shortest Routes industrial capstone project. We will finish with minimum spanning trees which are used to plan road, telephone and computer networks and also find applications in clustering and approximate algorithms.",102989.0,44488.0,4.7,2165.0
Algorithms on Strings,https://www.coursera.org/learn/algorithms-on-strings,Computer Science,Algorithms,"Neil Rhodes, Michael Levin, Michael Levin, Pavel  Pevzner, Alexander S. Kulikov","World and internet is full of textual information. We search for information using textual queries, we read websites, books, e-mails. All those are strings from the point of view of computer science. To make sense of all that information and make search efficient, search engines use many string algorithms. Moreover, the emerging field of personalized medicine uses many search algorithms to find disease-causing mutations in the human genome. In this online course you will learn key pattern matching concepts: tries, suffix trees, suffix arrays and even the Burrows-Wheeler transform.",76748.0,17894.0,4.5,1015.0
"Algorithms, Part I",https://www.coursera.org/learn/algorithms-part1,Computer Science,Algorithms,"Kevin Wayne, Robert Sedgewick","This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Part I covers elementary data structures, sorting, and searching algorithms. Part II focuses on graph- and string-processing algorithms.

All the features of this course are available for free.  It does not offer a certificate upon completion.",1028744.0,618183.0,4.9,9994.0
"Algorithms, Part II",https://www.coursera.org/learn/algorithms-part2,Computer Science,Algorithms,"Robert Sedgewick, Kevin Wayne","This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Part I covers elementary data structures, sorting, and searching algorithms. Part II focuses on graph- and string-processing algorithms.

All the features of this course are available for free.  It does not offer a certificate upon completion.",266810.0,108587.0,4.9,1765.0
Analysis of Algorithms,https://www.coursera.org/learn/analysis-of-algorithms,Computer Science,Algorithms,Robert Sedgewick,"This course teaches a calculus that enables precise quantitative predictions of large combinatorial structures. In addition, this course covers generating functions and real asymptotics and then introduces the symbolic method in the context of applications in the analysis of algorithms and basic structures such as permutations, trees, strings, words, and mappings.

All the features of this course are available for free.  It does not offer a certificate upon completion.",71077.0,28044.0,4.5,187.0
Analíticas de Datos con Pandas,https://www.coursera.org/learn/analticas-de-datos-con-pandas,Computer Science,Algorithms,Jesus Aguilar Gonzalez,"La analítica de datos ha avanzado considerablemente en los últimos años y ahora existen diversas herramientas que nos permiten realizar tareas o procesos que antes eran complicados de realizar. Gracias a su versatilidad, el lenguaje de programación Python posee una serie de librerías que permiten realizar proyectos de analítica de datos de una forma muy sencilla y una de las librerías más populares es Pandas.

En este curso nos enfocaremos a:

* Conocer los conceptos, métodos y funciones de la librería Pandas.
* Analizar datos rápida y fácilmente con la librería de Pandas.
* Usar la librería de Pandas para importar, construir y manipular DataFrames.",,4422.0,,
Approximation Algorithms,https://www.coursera.org/learn/approximation-algorithms,Computer Science,Algorithms,Mark de Berg,"Many real-world algorithmic problems cannot be solved efficiently using traditional algorithmic tools, for example because the problems are NP-hard. The goal of this course is to become familiar with important algorithmic concepts and techniques needed to effectively deal with such problems. These techniques apply when we don't require the optimal solution to certain problems, but an approximation that is close to the optimal solution. We will see how to efficiently find such approximations. 

Prerequisites:
In order to successfully take this course, you should already have a basic knowledge of algorithms and mathematics. Here's a short list of what you are supposed to know:
- O-notation, Ω-notation, Θ-notation; how to analyze algorithms
- Basic calculus: manipulating summations, solving recurrences, working with logarithms, etc.
- Basic probability theory: events, probability distributions, random variables, expected values etc.
- Basic data structures: linked lists, stacks, queues, heaps
- (Balanced) binary search trees
- Basic sorting algorithms, for example MergeSort, InsertionSort, QuickSort
- Graph terminology, representations of graphs (adjacency lists and adjacency matrix), basic graph algorithms (BFS, DFS, topological sort, shortest paths)

The material for this course is based on the course notes that can be found under the resources tab.  We will not cover everything from the course notes. The course notes are there both for students who did not fully understand the lectures as well as for students who would like to dive deeper into the topics.

The video lectures contain a few very minor mistakes. A list of these mistakes can be found under resources (in the document called ""Errata""). If you think you found an error, report a problem by clicking the square flag at the bottom of the lecture or quiz where you found the error.",5411.0,3892.0,4.7,29.0
Approximation Algorithms Part I,https://www.coursera.org/learn/approximation-algorithms-part-1,Computer Science,Algorithms,Claire Mathieu,"Approximation algorithms, Part I

How efficiently can you pack objects into a minimum number of boxes? How well can you cluster nodes so as to cheaply separate a network into components around a few centers? These are examples of NP-hard combinatorial optimization problems. It is most likely impossible to solve such problems efficiently, so our aim is to give an approximate solution that can be computed in polynomial time and that at the same time has provable guarantees on its cost relative to the optimum. 

This course assumes knowledge of a standard undergraduate Algorithms course, and particularly emphasizes algorithms that can be designed using linear programming, a favorite and amazingly successful technique in this area. By taking this course, you will be exposed to a range of problems at the foundations of theoretical computer science, and to powerful design and analysis techniques. Upon completion, you will be able to recognize, when faced with a new combinatorial optimization problem, whether it is close to one of a few known basic problems, and will be able to design linear programming relaxations and use randomized rounding to attempt to solve your own problem. The course content and in particular the homework is of a theoretical nature without any programming assignments.  

This is the first of a two-part course on Approximation Algorithms.",26985.0,19771.0,4.7,507.0
Aprenda a ensinar programação com o Programaê!,https://www.coursera.org/learn/programae,Computer Science,Algorithms,"Tiago Maluta, Maristela Alcântara","O curso ""Aprenda a ensinar programação com o Programaê!"" tem como objetivo apoiar professores no desenvolvimento de suas aulas com o ‘Programaê!’, um movimento que quer aproximar a programação do cotidiano de jovens de todo o Brasil por meio de um portal prático, agregador de ideias, soluções, dicas e planos de aula estruturados para professores.

Você não precisa ser programador ou entender de programação para fazer este curso! Nosso público-alvo são profissionais da educação (formal e não formal) que desejam desenvolver o pensamento lógico computacional de crianças, jovens e adultos utilizando os planos de aula do Programaê!

Ao concluir este curso, os alunos serão capazes de: 

•	Apresentar o Programaê! e os objetivos do movimento;
•	Definir qual é o papel da programação no desenvolvimento de habilidades e competências;
•	Apresentar e explorar o code.org como aluno e como professor, criando turmas, gerenciando e acompanhando o progresso dos alunos;
•	Entender como os planos de aula foram organizados e a importância do desenvolvimento de atividades desplugadas para o aprendizado dos conceitos da lógica de programação;

Para ser certificado, o cursista deve obter 100% de aproveitamento nas avaliações, que são apresentadas em formato de teste, com possibilidade de mais de uma tentativa. 

Participe de outros cursos da Fundação Lemann no Coursera - https://www.coursera.org/lemann",7793.0,1661.0,4.8,118.0
Aprendizaje de máquinas,https://www.coursera.org/learn/aprendizaje-maquinas-test,Computer Science,Algorithms,"Gibran Fuentes Pineda, Berenice Montalvo Lezama, Ricardo Montalvo Lezama","El aprendizaje de máquinas es una rama de la inteligencia artificial dedicada al estudio de métodos para dotar a los agentes artificiales de la capacidad de aprender a partir de ejemplos y/o experiencia. Los métodos de aprendizaje de máquinas pueden generar modelos de problemas complejos a través de instancias específicas, los cuales son capaces de generalizar y/o adaptarse a situaciones nuevas. Estos modelos han permitido llevar a cabo muchas nuevas aplicaciones en áreas muy diversas como generación de descripciones de imágenes, predicción de readmisión hospitalaria o detección de partículas subatómicas. En la actualizada frecuentemente interactuamos con modelos de aprendizaje de máquinas en diversas actividades de nuestra vida cotidiana. Por ejemplo, cuando utilizamos el teclado virtual en nuestros teléfonos móviles, un modelo de aprendizaje de máquinas trata de predecir la siguiente palabra que queremos escribir a partir de nuestro patrón de escritura y la de otros usuarios. De igual manera, al realizar una búsqueda en Internet, un modelo de aprendizaje de máquinas identifica los documentos más relevantes a ser mostrados de todos los posibles documentos usando nuestro historial de búsqueda. Al tomar una foto con nuestra cámara digital, un modelo de aprendizaje de máquinas detecta los rostros en la escena para poder enfocarlos de forma adecuada.

Este es un curso básico introductorio al aprendizaje de máquinas con un enfoque práctico, el cual aborda tanto los fundamentos generales como métodos específicos y algunos aspectos prácticos. El curso aborda tanto el aprendizaje supervisado como el aprendizaje sin supervisión. Los métodos que se presentan en el curso son regresión lineal, regresión logística, redes neuronales y K-medias.",,,,
Arrange student marks using Merge Sort algorithm,https://www.coursera.org/learn/arrange-student-marks-using-merge-sort-algorithm,Computer Science,Algorithms,Dr. Chao Mbogho,"In this project, the learner will use Java programming language to create user-defined methods to recursively and iteratively implement a merge sort algorithm to arrange an array of integers in ascending order, and also sort student marks entered by the user.",,,,
Artificial Intelligence Data Fairness and Bias,https://www.coursera.org/learn/ai-data-bias,Computer Science,Algorithms,Brent Summers,"In this course, we will explore fundamental issues of fairness and bias in machine learning. As predictive models begin making important decisions, from college admission to loan decisions, it becomes paramount to keep models from making unfair predictions. From human bias to dataset awareness, we will explore many aspects of building more ethical models.",3960.0,9706.0,4.8,75.0
Artificial Intelligence and legal issues,https://www.coursera.org/learn/artificial-intelligence-and-legal-issues,Computer Science,Algorithms,Annamaria Italiano,"The purpose of the course is to help students understand the legal implications related to the design and use of artificial intelligence systems, providing an overview of the risks and legal protections that can be envisaged and giving an overview of the legislation and legal principles currently applicable on the subject. In particular, the profiles of civil and criminal liability, protection in terms of intellectual property and the impacts of AI on the fundamental rights of the individual - including privacy and the right to non-discrimination – will be examined.",,1933.0,,
Artificial Intelligence: An Overview,https://www.coursera.org/learn/artificial-intelligence-an-overview,Computer Science,Algorithms,Nicola Gatti,"The course will provide a non-technical overview of the artificial intelligence field. Initially, a discussion on the birth of AI is provided, remarking the seminal ideas and preliminary goals. Furthermore, the crucial weaknesses are presented and how these weaknesses have been circumvented. Then, the current state of AI is presented, in terms of goals, importance at national level, and strategies. Moreover, the taxonomy of the AI topics is presented.",1679.0,4310.0,4.8,45.0
Automated Reasoning: satisfiability,https://www.coursera.org/learn/automated-reasoning-sat,Computer Science,Algorithms,Hans Zantema,"In this course you will learn how to apply satisfiability (SAT/SMT) tools to solve a wide range of problems.

Several basic examples are given to get the flavor of the applications: fitting rectangles to be applied for printing posters, scheduling problems, solving puzzles, and program correctness. Also underlying theory is presented: resolution as a basic approach for propositional satisfiability, the CDCL framework to scale up for big formulas, and the simplex method to deal with linear inequallities.

The light weight approach to following this course is just watching the lectures and do the corresponding quizzes. To get a flavor of the topic this may work out fine. However, the much more interesting approach is to use this as a basis to apply SAT/SMT yourself on several problems, for instance on the problems presented in the honor's assignment.",3958.0,3608.0,4.8,36.0
Bases y primeros pasos en latex,https://www.coursera.org/learn/bases-latex,Computer Science,Algorithms,María Ignacia España ,"En este curso basado en un proyecto y de 1,5 horas de duración, aprenderás a crear archivos de nivel profesional con Látex, aprenderás también a personalizar el código del documento para definir cada uno de los  atributos que desees presentar a los lectores. Para finalizar aprenderás a leer un código pre hecho de Látex, con el fin de que en adelante puedas utilizar templates y comprender a cabalidad sus partes, pudiendo personalizarlo a tu disposición. Es un curso de bases, por lo cual no necesitas tener conocimientos previos de Látex.",2236.0,,4.8,92.0
Basic Game Development with Levels using Scratch,https://www.coursera.org/learn/basic-game-development-with-levels-using-scratch,Computer Science,Algorithms,Stacey Shanklin-Langford,"By the end of this project, you will create a basic game using additional features with an introductory, web-based coding program called Scratch.  Learning to code will allow you to build basic coding or computer science skills and a fundamental understanding in order to grow your programming abilities. Learners will engage in the design process in order to develop an understanding of how to develop algorithms that control programs, use event-driven programming, and debug a program. Introduction to Basic Game Development using Scratch is a prerequisite for this project.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",4789.0,,4.6,110.0
Big Data Analysis with Scala and Spark,https://www.coursera.org/learn/scala-spark-big-data,Computer Science,Algorithms,Prof. Heather Miller,"Manipulating big data distributed over a cluster using functional concepts is rampant in industry, and is arguably one of the first widespread industrial uses of functional ideas. This is evidenced by the popularity of MapReduce and Hadoop, and most recently Apache Spark, a fast, in-memory distributed collections framework written in Scala. In this course, we'll see how the data parallel paradigm can be extended to the distributed case, using Spark throughout. We'll cover Spark's programming model in detail, being careful to understand how and when it differs from familiar programming models, like shared-memory parallel collections or sequential Scala collections. Through hands-on examples in Spark and Scala, we'll learn when important issues related to distribution like latency and network communication should be considered and how they can be addressed effectively for improved performance.

Learning Outcomes. By the end of this course you will be able to:

- read data from persistent storage and load it into Apache Spark,
- manipulate data with Spark and Scala,
- express algorithms for data analysis in a functional style, 
- recognize how to avoid shuffles and recomputation in Spark,

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Parallel Programming: https://www.coursera.org/learn/parprog1.",94591.0,28438.0,4.7,2564.0
Big Data Analysis with Scala and Spark (Scala 2 version),https://www.coursera.org/learn/scala2-spark-big-data,Computer Science,Algorithms,Prof. Heather Miller,"Manipulating big data distributed over a cluster using functional concepts is rampant in industry, and is arguably one of the first widespread industrial uses of functional ideas. This is evidenced by the popularity of MapReduce and Hadoop, and most recently Apache Spark, a fast, in-memory distributed collections framework written in Scala. In this course, we'll see how the data parallel paradigm can be extended to the distributed case, using Spark throughout. We'll cover Spark's programming model in detail, being careful to understand how and when it differs from familiar programming models, like shared-memory parallel collections or sequential Scala collections. Through hands-on examples in Spark and Scala, we'll learn when important issues related to distribution like latency and network communication should be considered and how they can be addressed effectively for improved performance.

Learning Outcomes. By the end of this course you will be able to:

- read data from persistent storage and load it into Apache Spark,
- manipulate data with Spark and Scala,
- express algorithms for data analysis in a functional style, 
- recognize how to avoid shuffles and recomputation in Spark,

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Parallel Programming: https://www.coursera.org/learn/parprog1.

Note that this version of the course uses Scala 2.13. You can find a more recent version of the course that uses Scala 3 here: https://www.coursera.org/learn/scala-spark-big-data",,5232.0,,
Big-O Time Complexity in Python Code,https://www.coursera.org/learn/big-o-time-complexity-in-python-code,Computer Science,Algorithms,David Dalsveen,"In the field of data science, the volumes of data can be enormous, hence the term Big Data. It is essential that algorithms operating on these data sets operate as efficiently as possible. One measure used is called Big-O time complexity. It is often expressed not in terms of clock time, but rather in terms of the size of the data it is operating on. For example, in terms of an array of size N, an algorithm may take N^2 operations to complete. Knowing how to calculate Big-O gives the developer another tool to make software as good as it can be and provides a means to communicate performance when reviewing code with others.

In this course, you will analyze several algorithms to determine Big-O performance. You will learn how to visualize the performance using the graphing module pyplot.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",1523.0,,4.6,26.0
BioData Processing,https://www.coursera.org/learn/biodata-processing,Computer Science,Algorithms,Danilo Oliveira Vaz,"Can we communicate with other living beings besides animals?

For example, it is well known that plants and fungi are sentient creatures, but modern societies/humans seem to regard this fact as unworthy of much attention. Perhaps we do so because we lack a common language to establish such inter-realms communication.

In this hands-on project you will challenge this frontier by translating electric signals (BioData) from plants and fungi into audio-visual media that we humans are capable of relating to. In order to accomplish this, you will engage with Processing, ""a flexible software sketchbook and a language for learning how to code within the context of the visual arts.""

Optional: In case you have an Anduino kit this project can be double fun, as learners will have instructions on how to collect the BioData themselves.",,,,
Blockchain : enjeux et mécanismes cryptographiques,https://www.coursera.org/learn/blockchain-enjeux-et-mecanismes-cryptographiques-bitcoin,Computer Science,Algorithms,"Romaric Ludinard, Hélène Le Bouder, Gaël Thomas","Ce mooc a été conçu par  :

- Romaric Ludinard (Enseignant-chercheur, IMT Atlantique)
- Hélène Le Bouder (Enseignante-chercheuse, IMT Atlantique)
- Gaël Thomas (Docteur en cryptologie)

Ce mooc est destiné aux personnes souhaitant comprendre les enjeux de la blockchain, les appliquer et les utiliser pour la création d’applications basées sur blockchain.
Que vous soyez étudiant.e.s en sciences, ingénieur.e.s en informatique, DSI ou entrepreneur.se.s, ce mooc est pour vous !

En suivant ce mooc, vous apprendrez à : 
- Décrire les principes de fonctionnement de la technologie blockchain et comparer les différents types de blockchain (publiques, privées, consortium)
- Expliquer les propriétés cryptographiques nécessaires pour la mise en oeuvre d’une blockchain : intégrité, authentification et non-répudiation
- Expliquer le fonctionnement des signatures numériques (protocole de signature ECDSA, fonction de hachage SHA-256) 
- Illustrer et manipuler le protocole Bitcoin : arbres de Merkle, mécanisme de preuve de travail (Proof-of-work), gestion et historique des transactions, auditabilité, intégrité des blocs et des mises à jour de la chaîne.

Ce MOOC a reçu le soutien financier de la Fondation Patrick & Lina Drahi.",,,,
Build a Modern Computer from First Principles: From Nand to Tetris (Project-Centered Course),https://www.coursera.org/learn/build-a-computer,Computer Science,Algorithms,"Shimon Schocken, Noam  Nisan","What you’ll achieve:

In this project-centered course* you will build a modern computer system, from the ground up. We’ll divide this fascinating journey into six hands-on projects that will take you from constructing elementary logic gates all the way through creating a fully functioning general purpose computer. In the process, you will learn - in the most direct and constructive way - how computers work, and how they are designed.

What you’ll need:
This is a self-contained course: all the knowledge necessary to succeed in the course and build the computer system will be given as part of the learning experience. Therefore, we assume no previous computer science or engineering knowledge, and all learners are welcome aboard. You will need no physical materials, since you will build the computer on your own PC, using a software-based hardware simulator, just like real computers are designed by computer engineers in the field. The hardware simulator, as well as other software tools, will be supplied freely after you enroll in the course.

Course format:
The course consists of six modules, each comprising a series of video lectures, and a project. You will need about 2-3 hours to watch each module's lectures, and about 5-10 hours to complete each one of the six projects. The course can be completed in six weeks, but you are welcome to take it at your own pace. You can watch a TED talk about this course by Googling ""nand2tetris TED talk"".

*About Project-Centered Courses: Project-centered courses are designed to help you complete a personally meaningful real-world project, with your instructor and a community of learners with similar goals providing guidance and suggestions along the way. By actively applying new concepts as you learn, you’ll master the course content more efficiently; you’ll also get a head start on using the skills you gain to make positive changes in your life and career. When you complete the course, you’ll have a finished project that you’ll be proud to use and share.",161301.0,159680.0,4.9,3241.0
CUDA Advanced Libraries,https://www.coursera.org/learn/cuda-advanced-libraries,Computer Science,Algorithms,Chancellor Thomas Pascale,"This course will complete the GPU specialization, focusing on the leading libraries distributed as part of the CUDA Toolkit. Students will learn how to use CuFFT, and linear algebra libraries to perform complex mathematical computations. The Thrust library’s capabilities in representing common data structures and associated algorithms will be introduced. Using cuDNN and cuTensor they will be able to develop machine learning applications that help with object detection, human language translation and image classification.",,1663.0,,
Camera and Imaging,https://www.coursera.org/learn/cameraandimaging,Computer Science,Algorithms,Shree Nayar,"This course covers the fundamentals of imaging – the creation of an image that is ready for consumption or processing by a human or a machine. Imaging has a long history, spanning several centuries. But the advances made in the last three decades have revolutionized the camera and dramatically improved the robustness and accuracy of computer vision systems. We describe the fundamentals of imaging, as well as recent innovations in imaging that have had a profound impact on computer vision.

This course starts with examining how an image is formed using a lens camera. We explore the optical characteristics of a camera such as its magnification, F-number, depth of field and field of view. Next, we describe how solid-state image sensors (CCD and CMOS) record images, and the key properties of an image sensor such as its resolution, noise characteristics and dynamic range. We describe how image sensors can be used to sense color as well as capture images with high dynamic range. In certain structured environments, an image can be thresholded to produce a binary image from which various geometric properties of objects can be computed and used for recognizing and locating objects. Finally, we present the fundamentals of image processing – the development of computational tools to process a captured image to make it cleaner (denoising, deblurring, etc.) and easier for computer vision systems to analyze (linear and non-linear image filtering methods).",5399.0,41012.0,4.6,59.0
Clasificación de imágenes: ¿cómo reconocer el contenido de una imagen?,https://www.coursera.org/learn/clasificacion-imagenes,Computer Science,Algorithms,"Ernest Valveny, Jordi Gonzàlez Sabaté, Ramon Baldrich Caselles","¿Te interesa la visión por computador? ¿Te gustaría saber cómo se puede reconocer el contenido visual de las imágenes y clasificarlas a partir de su contenido?

En este curso aprenderás diferentes métodos de representación y clasificación de imágenes. El temario del curso te permitirá conocer el esquema básico de clasificación de imágenes conocido como Bag of Visual Words. A partir de este esquema básico aprenderás cómo utilizar varios descriptores locales de la imagen así como los métodos de clasificación más habituales. También describiremos diferentes extensiones del esquema básico que permiten combinar distintos descriptores, incluir información espacial o mejorar la representación final de la imagen.

Finalizar el curso te permitirá:
•	Diseñar soluciones adaptadas para diferentes problemas de clasificación y reconocimiento de imágenes
•	Conocer las principales técnicas usadas para la descripción y clasificación de una imagen
•	Acceder a las herramientas que permiten el desarrollo de aplicaciones reales de clasificación de imágenes

El curso está orientado tanto a estudiantes universitarios de algún grado relacionado con la informática, la ingeniería o las matemáticas, como a otros estudiantes con conocimientos de programación, interesados en aprender cómo utilizar técnicas de visión por computador para extraer información de las imágenes.",15019.0,3208.0,4.3,77.0
"Cloud Computing Concepts, Part 1",https://www.coursera.org/learn/cloud-computing,Computer Science,Algorithms,Indranil Gupta,"Cloud computing systems today, whether open-source or used inside companies, are built using a common set of core techniques, algorithms, and design philosophies – all centered around distributed systems. Learn about such fundamental distributed computing ""concepts"" for cloud computing.

Some of these concepts include: clouds, MapReduce, key-value/NoSQL stores, classical distributed algorithms, widely-used distributed algorithms, scalability, trending areas, and much, much more! 
 
Know how these systems work from the inside out. Get your hands dirty using these concepts with provided homework exercises. In the programming assignments, implement some of these concepts in template code (programs) provided in the C++ programming language. Prior experience with C++ is required.
 
The course also features interviews with leading researchers and managers, from both industry and academia.",127081.0,38165.0,4.4,1031.0
Cloud Computing Concepts: Part 2,https://www.coursera.org/learn/cloud-computing-2,Computer Science,Algorithms,Indranil Gupta,"Cloud computing systems today, whether open-source or used inside companies, are built using a common set of core techniques, algorithms, and design philosophies – all centered around distributed systems. Learn about such fundamental distributed computing ""concepts"" for cloud computing.

Some of these concepts include: clouds, MapReduce, key-value/NoSQL stores, classical distributed algorithms, widely-used distributed algorithms, scalability, trending areas, and much, much more! 
 
Know how these systems work from the inside out. Get your hands dirty using these concepts with provided homework exercises. In the programming assignments, implement some of these concepts in template code (programs) provided in the C++ programming language. Prior experience with C++ is required.
 
The course also features interviews with leading researchers and managers, from both industry and academia.

This course builds on the material covered in the Cloud Computing Concepts, Part 1 course.",30288.0,6778.0,4.6,314.0
Cognición encarnada,https://www.coursera.org/learn/cognicion,Computer Science,Algorithms,Carlos Gershenson,"Esta materia de corte teórico forma parte del programa especializado introducción a la Inteligencia Artificial, aunque puede tomarse de manera independiente.

Las ciencias cognitivas estudian el conocimiento, por lo que abarca a una diversidad de disciplinas, tales como la psicología, neurofisiología, lingüística, filosofía y también la inteligencia artificial. Por una parte, las ciencias cognitivas pueden ayudarnos a construir sistemas que exhiban una inteligencia más sofisticada. Por otra, los avances y experimentos en inteligencia artificial pueden ser útiles al resto de las ciencias cognitivas. 

En este curso cubrirá brevemente la historia y conceptos más relevantes de ciencias cognitivas, relacionándolos con temas revisados en el Programa Especializado. 

El objetivo es que puedas desarrollar un discurso para expresar tu opinión sobre la cognición en humanos, animales, otros seres vivos y máquinas.",2865.0,2491.0,4.7,26.0
Combinatorics and Probability,https://www.coursera.org/learn/combinatorics,Computer Science,Algorithms,"Владимир Подольский, Alexander S. Kulikov","Counting is one of the basic mathematically related tasks we encounter on a day to day basis. The main question here is the following. If we need to count something, can we do anything better than just counting all objects one by one? Do we need to create a list of all phone numbers to ensure that there are enough phone numbers for everyone? Is there a way to tell that our algorithm will run in a reasonable time before implementing and actually running it? All these questions are addressed by a mathematical field called Combinatorics.

In this online course we discuss most standard combinatorial settings that can help to answer questions of this type. We will especially concentrate on developing the ability to distinguish these settings in real life and algorithmic problems. This will help the learner to actually implement new knowledge. Apart from that we will discuss recursive technique for counting that is important for algorithmic implementations.

One of the main ‘consumers’ of Combinatorics is Probability Theory. This area is connected with numerous sides of life, on one hand being an important concept in everyday life and on the other hand being an indispensable tool in such modern and important fields as Statistics and Machine Learning. In this course we will concentrate on providing the working knowledge of basics of probability and a good intuition in this area. The practice shows that such an intuition is not easy to develop.

In the end of the course we will create a program that successfully plays a tricky and very counterintuitive dice game.

As prerequisites we assume only basic math (e.g., we expect you to know what is a square or how to add fractions), basic programming in python (functions, loops, recursion), common sense and curiosity. Our intended audience are all people that work or plan to work in IT, starting from motivated high school students.",38300.0,12637.0,4.6,803.0
Comportamiento adaptativo,https://www.coursera.org/learn/comportamiento-adapta,Computer Science,Algorithms,Carlos Gershenson,"Los seres vivos han evolucionado en entornos cambiantes, por lo que han desarrollado mecanismos que les permiten exhibir comportamiento adaptativo. Usando el método sintético, podemos construir sistemas artificiales adaptativos que implementen dichos mecanismos, con lo cual también podemos incrementar nuestra comprensión de los sistemas naturales.

En este curso veremos diversos conceptos que se han aplicado en la inteligencia artificial con orígenes en la biología y en la cibernética. Construyendo sobre ejemplos de sistemas vivos, revisaremos diversos algoritmos que permiten a los sistemas adaptarse y de esta manera enfrentar a la complejidad y cambios de su entorno. También cubriremos temas relacionados con la robustez, la cual complementa a la adaptación. Finalmente, veremos algunas aplicaciones de este tipo de inteligencia artificial. En el proyecto final, se desarrollará un sistema artificial que exhiba comportamiento adaptativo.",2868.0,1710.0,4.5,16.0
Compose and Program Music in Python using Earsketch,https://www.coursera.org/learn/compose-program-music-in-python-using-earsketch,Computer Science,Algorithms,Stacey Shanklin-Langford,"By the end of this course, you will create a basic composition using the Python programming language in Earsketch. You will learn basic Python functions in order to create a basic music composition. Learning basic Python functions will allow you to develop your skills in programming and diversify your knowledge of various programming languages. Python has become increasingly popular in computer science; knowledge of Python is highly desired in the computer science industry.",14632.0,,4.5,424.0
Computational Thinking for Problem Solving,https://www.coursera.org/learn/computational-thinking-problem-solving,Computer Science,Algorithms,Susan Davidson,"Computational thinking is the process of approaching a problem in a systematic manner and creating and expressing a solution such that it can be carried out by a computer.  But you don't need to be a computer scientist to think like a computer scientist!  In fact, we encourage students from any field of study to take this course.  Many quantitative and data-centric problems can be solved using computational thinking and an understanding of computational thinking will give you a foundation for solving problems that have real-world, social impact.   

In this course, you will learn about the pillars of computational thinking, how computer scientists develop and analyze algorithms, and how solutions can be realized on a computer using the Python programming language.  By the end of the course, you will be able to develop an algorithm and express it to the computer by writing a simple Python program. 

This course will introduce you to people from diverse professions who use computational thinking to solve problems. You will engage with a unique community of analytical thinkers and be encouraged to consider how you can make a positive social impact through computational thinking.",86662.0,112152.0,4.7,1211.0
Computational Vision,https://www.coursera.org/learn/mind-machine-computational-vision,Computer Science,Algorithms,David Quigley,"In this course, we will expand on vision as a cognitive problem space and explore models that address various vision tasks. We will then explore how the boundaries of these problems lead to a more complex analysis of the mind and the brain and how these explorations lead to more complex computational models of understanding.",3781.0,2840.0,4.4,59.0
"Computer Science:  Algorithms, Theory, and Machines",https://www.coursera.org/learn/cs-algorithms-theory-machines,Computer Science,Algorithms,"Robert Sedgewick, Kevin Wayne","This course  introduces the broader discipline of computer science to people having basic familiarity with Java programming.  It covers the second half of our book Computer Science: An Interdisciplinary Approach (the first half is covered in our Coursera course Computer Science: Programming with a Purpose, to be released in the fall of 2018). Our intent is to demystify computation and to build awareness about the substantial intellectual underpinnings and rich history of the field of computer science.

First, we introduce classic algorithms along with scientific techniques for evaluating performance, in the context of modern applications. Next, we introduce classic theoretical models that allow us to address fundamental questions about computation, such as computability, universality, and intractability. We conclude with machine architecture (including machine-language programming and its relationship to coding in Java) and logic design (including a full CPU design built from the ground up).

The course emphasizes the relationships between applications programming, the theory of computation, real computers, and the field's history and evolution, including the nature of the contributions of Boole, Shannon, Turing, von Neumann, and others.

All the features of this course are available for free. No certificate will be offered upon completion.",86491.0,58458.0,4.8,361.0
Computer Vision Basics,https://www.coursera.org/learn/computer-vision-basics,Computer Science,Algorithms,"Radhakrishna Dasari, Junsong Yuan","By the end of this course, learners will understand what computer vision is, as well as its mission of making computers see and interpret the world as humans do, by learning core concepts of the field and receiving an introduction to human vision capabilities. They are equipped to identify some key application areas of computer vision and understand the digital imaging process. The course covers crucial elements that enable computer vision: digital signal processing, neuroscience and artificial intelligence. Topics include color, light and image formation; early, mid- and high-level vision; and mathematics essential for computer vision. Learners will be able to apply mathematical techniques to complete computer vision tasks. 

This course is ideal for anyone curious about or interested in exploring the concepts of computer vision. It is also useful for those who desire a refresher course in mathematical concepts of computer vision. Learners should have basic programming skills and experience (understanding of for loops, if/else statements), specifically in MATLAB (Mathworks provides the basics here: https://www.mathworks.com/learn/tutorials/matlab-onramp.html). Learners should also be familiar with the following: basic linear algebra (matrix vector operations and notation), 3D co-ordinate systems and transformations, basic calculus (derivatives and integration) and basic probability (random variables).  

Material includes online lectures, videos, demos, hands-on exercises, project work, readings and discussions. Learners gain experience writing computer vision programs through online labs using MATLAB* and supporting toolboxes.

 * A free license to install MATLAB for the duration of the course is available from MathWorks.",73427.0,22520.0,4.2,1766.0
Crea tu artículo científico con latex,https://www.coursera.org/learn/articulo-cientifico-latex,Computer Science,Algorithms,María Ignacia España ,"En este curso basado en un proyecto y de 1,5 horas de duración, aprenderás a crear articulo cientificoss de nivel profesional con Látex, aprenderás también a personalizar el código del documento para definir cada uno de los  atributos que desees presentar a los lectores. Para finalizar aprenderás a leer un código pre hecho de Látex, con el fin de que en adelante puedas utilizar templates y comprender a cabalidad sus partes, pudiendo personalizarlo a tu disposición. Es un curso de bases, por lo cual no necesitas tener conocimientos previos de Látex.",,,4.6,44.0
Crea tu curriculum profesional con latex,https://www.coursera.org/learn/curriculum-profesional-latex,Computer Science,Algorithms,María Ignacia España ,"En este curso basado en un proyecto y de 1,5 horas de duración, aprenderás a crear tu currículum profesional con Látex, aprenderás también a personalizar el código del documento para definir cada uno de los  atributos que desees presentar a los lectores. Para finalizar aprenderás a leer un código pre hecho de Látex, con el fin de que en adelante puedas utilizar templates y comprender a cabalidad sus partes, pudiendo personalizarlo a tu disposición. Es un curso de bases, por lo cual no necesitas tener conocimientos previos de Látex.",,,4.3,15.0
Create a Network of Friends using a Weighted Graph in Java,https://www.coursera.org/learn/create-a-network-of-friends-using-a-weighted-graph-in-java,Computer Science,Algorithms,Dr. Chao Mbogho,"The learner will create user-defined methods to create a network of friends using a weighted undirected graph. The learner will implement a graph using a Hashmap of nodes and Linked Lists, add nodes to the graph, add edges between nodes, print the contents of the graph, and traverse the graph using depth-first search.",,,,
"Creating a Rock, Paper, Scissors Game in Python",https://www.coursera.org/learn/rock-paper-scissors,Computer Science,Algorithms,Dalya Faizy,"By the end of this project, you will be able to create a simple interactive game of rock, paper, or scissors. Throughout this guided project, you will be introduced to the basic skills needed for every programming language such as different data types, loops, and if conditions. Each part of the project will prepare you to code on your own in Python language, whether to create a game or simple coding.
Python programming is one of the easiest programming languages since its syntax is English-like. It is used in many applications and mastering it will definitely pave a way for you to start a career in any programming-based field. Python is also the base for the machine learning and deep learning field.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",,,,
Creatividad computacional,https://www.coursera.org/learn/creatividad-computacional,Computer Science,Algorithms,Dra. Wendy Elizabeth Aguilar Martínez,"¿Qué es la creatividad? ¿Pueden ser creativas las computadoras? ¿Cómo, cuándo y con qué objetivo surgió esta nueva área de investigación? ¿Hasta dónde hemos llegado en la creación de sistemas “creativos” y qué teorías, metodologías y técnicas podemos usar para programar y evaluar este tipo de sistemas en generación de narrativas, música, descubrimiento científico, artes visuales, etcétera?

Analizaremos éstas y otras preguntas, y discutiremos sobre sus implicaciones a lo largo del curso. Asimismo, conforme avances en las lecciones, irás construyendo poco a poco tu propio agente artificial creativo.

Es indispensable que cuentes con conocimientos básicos en programación (Python) y algoritmos genéticos.",2830.0,,,
Cryptography and Hashing Overview,https://www.coursera.org/learn/crypto-hashing,Computer Science,Algorithms,Stefano M. Stefan,"Continue learning about blockchain technology by diving into the nature of ownership and how the blockchain is one way to approach decentralized transaction handling. This course also demystifies cryptography and hashing, which are critical for authenticating users and guaranteeing transaction privacy.

This course requires the purchase of two books for the completion of assignments:

Drescher, D. (2017). Blockchain Basics: A Non-Technical Introduction in 25 Steps. (ISBN-13: 978-1484226032)
Antonoupoulos, A. M. (2017). The Internet of Money, Volume Two. (ISBN-13: 978-1947910065)",5351.0,9585.0,4.5,38.0
Cómo encontrar intereses de la audiencia con Meta Business,https://www.coursera.org/learn/encontrar-intereses-de-la-audiencia-con-meta-business,Computer Science,Algorithms,Nicole Alvelo,"Facebook tiene un nuevo nombre, y con ese nuevo nombre también, una nueva plataforma para sus negocios. Ahora, mejor conocido hoy como Meta, tiene una nueva vista de todo en su Suite Comercial, y queremos mostrarte cómo funcionan las nuevas herramientas. Estos le mostrarán cómo encontrar percepción de la audiencia en Facebook, Meta. Este proyecto te mostrará las herramientas que necesitas para conocer este juego de Meta Business Suite. Eso te ayudará a encontrar la audiencia que te sigue, a la que quieres impactar y cómo esto afecta o brinda mejores opciones para tu negocio. Conocerás todas las estadísticas, edades, países o ciudades donde están registrados tus seguidores o compradores. Entonces, en este proyecto, verá todas las opciones disponibles para crear contenido y anuncios dirigidos a su audiencia, lo que apunta a oportunidades fantásticas para su negocio. Podrás ver cómo crear un anuncio dirigido al público que quieres y validar cómo las campañas que has creado ofrecen opinión. Este proyecto es para ti si quieres conocer todo lo que ofrece Meta Business Suite en tu área de audiencia. Vamos a practicar y poner manos a la obra en lo que aprendemos. Prepárate para aprender mucho y practicar para tu próximo proyecto.",,,,
Cómo vincular cuentas de anuncios de Meta Business,https://www.coursera.org/learn/como-vincular-cuentas-de-anuncios-de-meta-business,Computer Science,Algorithms,Nicole Alvelo,"Este proyecto está hecho para enseñarles cómo vincular la cuenta de una forma sencilla y entender de donde proviene todo lo necesario para interconectar la cuenta general con la cuenta de ads por lo que hemos desarrollado este proyecto llamado ""Cómo vincular cuentas de anuncios de Facebook a Meta Business Suite"". Si bien es cierto, los ads, son esos anuncios que atrapan la audiencia que necesitamos y es la herramienta que necesitamos entender a la perfección porque permitirá que nos encuentren futuros clientes. Compartiré varios elementos de Meta Business Suite y les mostraré cómo verificar si cobraron el anuncio, que la información de pago está correcta, que se asignó un método de pago y más. Facebook contiene muchas herramientas, pero los ads o anuncios es una de esas herramientas de mercadeo que son importantes y te dará un posicionamiento en el mundo digital. Siempre es importante aprender sobre anuncios y veremos los resultados pagos y orgánicos que este tipo de anuncios brinda. Podrás visualizar toda la data mientras aprendes a trabajar en ambas cuentas y como vincular una con la otra. Facebook siendo la plataforma digital más importante para los negocios, no puedes dejar pasar la oportunidad de aprender sobre esta plataforma y sacarle el mayor provecho.",,,,
Cómputo evolutivo,https://www.coursera.org/learn/computo-evolutivo,Computer Science,Algorithms,Katya Rodríguez Vázquez,"La computación evolutiva (evolutionary computation, EC), aplica la teoría de la evolución natural y la genética en la adaptación evolutiva de estructuras computacionales, proporcionando un medio alternativo para atacar problemas complejos en diversas áreas, como la ingeniería, economía, química, medicina y, porque no, las artes. Una población de posibles soluciones de un problema dado es análoga a una población de organismos vivos que evolucionan cada generación, al recombinar los mejores individuos de la población y transmitir sus características de dichos individuos padres, a sus descendientes. En este campo, diferentes esquemas de métodos evolutivos se han desarrollado, los cuales difieren en el tipo de estructuras que conforman la población.

Algoritmos evolutivos (AE), como también se le conoce al cómputo evolutivo (EC), se definen como métodos de optimización y búsqueda, los cuales están inspirados y tratan de imitar de manera parcial los procesos de la evolución natural, y mantienen una población de estructuras que evolucionan de acuerdo a reglas de selección y otros operadores genéticos, como cruzamiento y mutación (Bäck, 1996).
Los algoritmos evolutivos no son los únicos métodos de optimización propuestos a partir de sistemas biológicos. Se tiene una variedad de algoritmos de optimización, que tratan de imitar el comportamiento de sistemas naturales, como las colonias de hormigas, algoritmos culturales y optimización por cúmulos de partículas, entre otros. De aquí surge lo que se conoce como algoritmos bioinspirados, ya que toman sus bases a partir de la estructura de procesos y sistemas biológicos: la evolución, la selección natural, comportamiento social de animales, como las hormigas, abejas, peces.

BÄCK, T. (1996) Evolutionary Algorithms in Theory and Practice. Oxford University Press. DARWIN, C. (1859) On the Origin of Species by Means of Natural Selection, or the Preservation of Favoured Races in the Struggle for Life, John Murray.",3335.0,2610.0,3.9,14.0
Data Structures,https://www.coursera.org/learn/data-structures,Computer Science,Algorithms,"Neil Rhodes, Daniel M Kane, Michael Levin, Michael Levin, Alexander S. Kulikov","A good algorithm usually comes together with a set of good data structures that allow the algorithm to manipulate the data efficiently. In this online course, we consider the common data structures that are used in various computational problems. You will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments. This will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it. You will also learn typical use cases for these data structures.

A few examples of questions that we are going to cover in this class are the following:
1. What is a good strategy of resizing a dynamic array?
2. How priority queues are implemented in C++, Java, and Python?
3. How to implement a hash table so that the amortized running time of all operations is O(1) on average?
4. What are good strategies to keep a binary tree balanced? 

You will also learn how services like Dropbox manage to upload some large files instantly and to save a lot of storage space!",233290.0,294576.0,4.6,5042.0
Data Structures and Algorithms (I),https://www.coursera.org/learn/data-structures-algorithms-1,Computer Science,Algorithms,Junhui DENG,"By learning this course, you will get a comprehensive  grasp of vector and list and the ability to use them in solving real problems. By the end of this course, you will be able to evaluate data structures and algorithms in terms of asymptotic complexity, analyze storage/time complexity of iterative/recursive algorithms, implement 

vector and list, understand/implement  basic sorting algorithms such as Bubblesort, Insertionsort, and Selectionsort, understand/implement search algorithms such as Binary Search, Fibonacci Search, and Interpolation Search, use vector and list in problem-solving.

通过学习本课程，你将得到向量和列表的全面理解以及使用向量和列表解决实际问题的能力。 在本课程结束时，你将能够根据渐进复杂度评估数据结构和算法，分析迭代/递归算法的空间/时间复杂度，实现向量和列表， 了解/实现基本排序算法（例如冒泡排序、插入排序和选择排序），理解/实现搜索算法（例如二分搜索、斐波那契搜索和插值搜索）， 使用向量和列表解决问题。",13757.0,8291.0,,
Data Structures and Algorithms (II),https://www.coursera.org/learn/data-structures-algorithms-2,Computer Science,Algorithms,Junhui DENG,"By learning this course, you will get a comprehensive  grasp of stack, queue, binary tree, graph and BST structures and algorithms, as well as their applications. By the end of this course, you will be able to understand and implement stack, queue and binary tree, use binary trees to solve problems such Huffman encoding, understand and implement the graph structure as well as related algorithms such BFS, DFS and PFS, understand and implement  AVL tree.

通过学习本课程，你将全面了解栈、队列、二叉树、图和二叉搜索树结构、算法及其应用。 在本课程结束时，你将能够理解和实现栈、队列和二叉树，使用二叉树解决霍夫曼编码等问题，理解并实现图结构以及相关算法（例如BFS，DFS和PFS），理解并实现AVL树。",3490.0,2047.0,,
Data Structures and Algorithms (III),https://www.coursera.org/learn/data-structures-algorithms-3,Computer Science,Algorithms,Junhui DENG,"By learning this course, you will get a comprehensive grasp of hashing  and typical balanced binary search trees, as well as their applications. By the end of this course, you will be able to understand the principle of Hashing, design and implement Hashtables for real problems, understand and implement typical balanced binary search trees such as Splay tree, Red-Black tree as well as B-tree, use BBST to solve various problems such as range query.

通过学习本课程，你将全面了解散列和典型的平衡二叉搜索树技术及其应用。 在本课程结束时，你将能够了解散列的原理，设计和实现用于实际问题的哈希表，了解并实现典型的平衡二叉搜索树，例如Splay树，红黑树以及B树，并使用BBST解决各种问题，例如范围查询。",2781.0,,,
Data Structures and Algorithms (IV),https://www.coursera.org/learn/data-structures-algorithms-4,Computer Science,Algorithms,Junhui DENG,"By learning this course, you will get a comprehensive grasp of Priority Queues and string match techniques, as well as their applications. By the end of this course, you will be able to understand/implement Bucketsort, Counting-sort, and Radixsort, understand the principle/implementation/application of different Priority Queues such as complete binary heap and leftist heap, understand and implement Heapsort, understand and implement typical string matching algorithms such as KMP, BM, and Karp-Rabin, implement and analyze advanced selection/sorting algorithms such as Quicksort, QuickSelect, LinearSelect, and Shellsort.

通过学习本课程，你将全面了解优先级队列和字符串匹配技术及其应用。 在本课程结束时，你将能够了解/实现桶排序，计数排序和基数排序，了解不同优先级队列的原理/实现/应用，例如完全二叉堆和左倾堆，了解并实现堆排序，了解并实现典型的字符串匹配算法（例如KMP，BM和Karp-Rabin），实现并分析高级选择/排序算法，例如快速排序、快速选择、线性选择和希尔排序。",2851.0,,,
Data Structures and Performance,https://www.coursera.org/learn/data-structures-optimizing-performance,Computer Science,Algorithms,"Christine Alvarado, Mia Minnes, Leo Porter","How do Java programs deal with vast quantities of data? Many of the data structures and algorithms that work with introductory toy examples break when applications process real, large data sets.  Efficiency is critical, but how do we achieve it, and how do we even measure it?

This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science, and in particular, we recommend that you have taken the first course in this specialization (which also requires some previous experience with Java).  

In this course, you will use and analyze data structures that are used in industry-level applications, such as linked lists, trees, and hashtables.  You will explain how these data structures make programs more efficient and flexible.  You will apply asymptotic Big-O analysis to describe the performance of algorithms and evaluate which strategy to use for efficient data retrieval, addition of new data, deletion of elements, and/or memory usage.

The program you will build throughout this course allows its user to manage, manipulate and reason about large sets of textual data.  This is an intermediate Java course, and we will build on your prior knowledge.  This course is designed around  the same video series as in our first course in this specialization, including explanations of core content, learner videos, student and engineer testimonials, and support videos -- to better allow you to choose your own path through the course!",90766.0,52654.0,4.8,2176.0
Delivery Problem,https://www.coursera.org/learn/delivery-problem,Computer Science,Algorithms,Alexander S. Kulikov,"In this online course we’ll implement (in Python) together efficient programs for a problem needed by delivery companies all over the world millions times per day — the travelling salesman problem. The goal in this problem is to visit all the given places as quickly as possible. How to find an optimal solution to this problem quickly? We still don’t have provably efficient algorithms for this difficult computational problem and this is the essence of the P versus NP problem, the most important open question in Computer Science. Still, we’ll implement several solutions for real world instances of the travelling salesman problem.

While designing these solutions, we will rely heavily on the material learned in the courses of the specialization: proof techniques, combinatorics, probability, graph theory. We’ll see several examples of using discrete mathematics ideas to get more and more efficient solutions.",18957.0,1961.0,4.7,358.0
Detección de objetos,https://www.coursera.org/learn/deteccion-objetos,Computer Science,Algorithms,"Antonio López Peña, Ernest Valveny, Maria Vanrell","¿Te interesa la visión por computador? ¿Te gustaría conocer qué métodos puedes utilizar para detectar y reconocer objetos en una imagen? 

En este curso te introducirás en los principios básicos de cualquier sistema automático de detección y reconocimiento de objetos en imágenes. A lo largo del curso analizaremos diferentes métodos de representación y clasificación que te permitirán abordar casos de aplicación de complejidad creciente.

El contenido del curso se estructura a partir de un esquema básico de detección y reconocimiento de objetos que sirve de guía para ir introduciendo tanto los diferentes métodos de extracción de características y representación de la imagen como diferentes alternativas para clasificar una imagen y para localizar todas las instancias de un objeto en la imagen. El temario incluye conceptos básicos de formación de la imagen, la convolución y su aplicación a la detección de contornos, características de regiones, descriptores de imagen (Local Binary Pattern, Histogram of Oriented Gradients, características de Haar) y varios métodos de clasificación (clasificador lineal, Support Vector Machine, Adaboost, Random Forest, Convolutional Neural Network).

Finalizar el curso te permitirá:
•	Diseñar, a partir de un esquema básico común, soluciones adaptadas para diferentes problemas de detección y reconocimiento de objetos en una imagen,
•	Conocer las principales técnicas para la descripción y clasificación de una imagen,
•	Conocer las herramientas que permiten el desarrollo de aplicaciones reales de detección y reconocimiento de objetos, para que seas capaz de desarrollar tus propios sistemas de detección y reconocimiento de objetos en múltiples aplicaciones.

El curso está orientado tanto a estudiantes universitarios de algún grado relacionado con la informática, la ingeniería o las matemáticas, como a otros estudiantes con conocimientos de programación, interesados en aprender cómo utilizar técnicas de visión por computador para extraer información de las imágenes. 

INICIO: 1 de Diciembre de 2015",31837.0,6697.0,4.5,343.0
Discrete Optimization,https://www.coursera.org/learn/discrete-optimization,Computer Science,Algorithms,"Professor Pascal Van Hentenryck, Dr. Carleton Coffrin","Tired of solving Sudokus by hand? This class teaches you how to solve complex search problems with discrete optimization concepts and algorithms, including constraint programming, local search, and mixed-integer programming.

Optimization technology is ubiquitous in our society. It schedules planes and their crews, coordinates the production of steel, and organizes the transportation of iron ore from the mines to the ports. Optimization clears the day-ahead and real-time markets to deliver electricity to millions of people. It organizes kidney exchanges and cancer treatments and helps scientists understand the fundamental fabric of life, control complex chemical reactions, and design drugs that may benefit billions of individuals.

This class is an introduction to discrete optimization and exposes students to some of the most fundamental concepts and algorithms in the field. It covers constraint programming, local search, and mixed-integer programming from their foundations to their applications for complex practical problems in areas such as scheduling, vehicle routing, supply-chain optimization, and resource allocation.",61810.0,52690.0,4.8,690.0
"Divide and Conquer, Sorting and Searching, and Randomized Algorithms",https://www.coursera.org/learn/algorithms-divide-conquer,Computer Science,Algorithms,Tim Roughgarden,"The primary topics in this part of the specialization are: asymptotic (""Big-oh"") notation, sorting and searching, divide and conquer (master method, integer and matrix multiplication, closest pair), and randomized algorithms (QuickSort, contraction algorithm for min cuts).",207064.0,121404.0,4.8,4957.0
"Dynamic Programming, Greedy Algorithms",https://www.coursera.org/learn/dynamic-programming-greedy-algorithms,Computer Science,Algorithms,Sriram Sankaranarayanan,"This course covers basic algorithm design techniques such as divide and conquer, dynamic programming, and greedy algorithms. It concludes with a brief introduction to intractability (NP-completeness) and using linear/integer programming solvers for solving optimization problems. We will also cover some advanced topics in data structures.

Dynamic Programming, Greedy Algorithms can be taken for academic credit as part of CU Boulder’s Master of Science in Data Science (MS-DS) degree offered on the Coursera platform. The MS-DS is an interdisciplinary degree that brings together faculty from CU Boulder’s departments of Applied Mathematics, Computer Science, Information Science, and others. With performance-based admissions and no application process, the MS-DS is ideal for individuals with a broad range of undergraduate education and/or professional experience in computer science, information science, mathematics, and statistics. Learn more about the MS-DS program at https://www.coursera.org/degrees/master-of-science-data-science-boulder.",5962.0,59095.0,4.4,36.0
Eine Kurze Einführung in Julia,https://www.coursera.org/learn/einfuehrung-in-julia-programming,Computer Science,Algorithms,Jousef Murad,Eine Einführung in Julia,,,,
Ethics of Artificial Intelligence,https://www.coursera.org/learn/ethics-of-artificial-intelligence,Computer Science,Algorithms,Viola Schiaffonati,"This course deals with the problems created, aggravated or transformed by AI. It is intended to give students a chance to reflect on the ethical, social, and cultural impact of AI by focusing on the issues faced by and brought about by professionals in AI but also by citizens, institutions and societies. The course addresses these topics by means of case studies and examples analyzed in the light of the main ethical frameworks.",,3801.0,4.8,13.0
"Everyday Excel, Part 3 (Projects)",https://www.coursera.org/learn/everyday-excel-projects,Computer Science,Algorithms,Charlie Nuttelman,"""Everyday Excel, Part 3 (Projects)"" is a continuation of ""Everyday Excel, Parts 1 and 2"".  It is a capstone, projects-based course in which you will apply what you've learned previously to more complex, somewhat open-ended projects (open-ended with respect to the fact that they can be solved in multiple ways).

Each learner must complete 3""warm-up"" projects (chosen from 3), 3 intermediate projects (chosen from 6), and 3 main (more difficult) projects (chosen from 5).  The projects have been created to span a wide range of interests and topic areas and are anticipated to appeal to diverse learner backgrounds.

It is hoped that this project-based courses will dramatically reinforce the application of Excel tools, techniques, and functions to real-world projects.",16967.0,41516.0,4.7,200.0
"Excel/VBA for Creative Problem Solving, Part 1",https://www.coursera.org/learn/excel-vba-for-creative-problem-solving-part-1,Computer Science,Algorithms,Charlie Nuttelman,"""Excel/VBA for Creative Problem Solving, Part 1"" is aimed at learners who are seeking to augment, expand, optimize, and increase the efficiency of their Excel spreadsheet skills by tapping into the powerful programming, automation, and customization capabilities available with Visual Basic for Applications (VBA).  

This course is the first part of a three-part series and Specialization that focuses on the application of computing techniques in Excel/VBA to solve problems.  In this course (Part 1), you will: 1) create macros to automate procedures in Excel; 2) define your own user-defined functions; 3) create basic subroutines to interface with the user; 4) learn the basic programming structures in VBA; and 5) automate Excel’s Goal Seek and Solver tools and use numerical techniques to create “live solutions” to solve targeting and optimization problems.

New to computer programming?  The extremely intuitive and visual nature of VBA lends itself nicely to teaching and learning - what a fun way to learn to code!  No prior knowledge in programming nor advanced math skills are necessary yet seasoned programmers will pick up new and creative spreadsheet problem solving strategies.

After you have learned the basics of VBA, each module will introduce foundational and broad problems inspired by situations that you might encounter in the real world.  To pass each module, you'll need to pass a mastery quiz and complete a problem solving assignment.  This course is unique in that the weekly assignments are completed in-application (i.e., on your own computer in Excel), providing you with valuable hands-on training.",130303.0,165007.0,4.8,3877.0
"Excel/VBA for Creative Problem Solving, Part 2",https://www.coursera.org/learn/excel-vba-for-creative-problem-solving-part-2,Computer Science,Algorithms,Charlie Nuttelman,"""Excel/VBA for Creative Problem Solving, Part 2"" builds off of knowledge and skills obtained in ""Excel/VBA for Creative Problem Solving, Part 1"" and is aimed at learners who are seeking to augment, expand, optimize, and increase the efficiency of their Excel spreadsheet skills by tapping into the powerful programming, automation, and customization capabilities available with Visual Basic for Applications (VBA).

In Part 2 of the course, learners will: 1) learn how to work with arrays and import/export arrays from/to Excel using VBA code; 2) learn how to work with text strings and write data to .txt files and import information from .txt files; 3) automate the import, modification, and consolidation of information from multiple worksheets into a central worksheet as well as the import of information from multiple workbooks to a central workbook; and 4) gain experience with creating professional user forms to interface with the user, perform advanced calculations, and manipulate data on the spreadsheet.

Learners who have a foundational understanding of VBA code and programming structures can jump right into Part 2 of the course without taking Part 1 and use the screencasts in Part 1 as reference.

Each module will introduce foundational and broad problems inspired by situations that you might encounter in the real world.  To pass each module, you'll need to pass a mastery quiz and complete a problem solving assignment.  This course is unique in that the weekly assignments are completed in-application (i.e., on your own computer in Excel), providing you with valuable hands-on training.",34924.0,38387.0,4.9,1227.0
"Excel/VBA for Creative Problem Solving, Part 3 (Projects)",https://www.coursera.org/learn/excel-vba-for-creative-problem-solving-part-3-projects,Computer Science,Algorithms,Charlie Nuttelman,"In this course, learners will complete several VBA projects.  It is highly recommended that learners first take ""Excel/VBA for Creative Problem Solving, Part 1"" and ""Excel/VBA for Creative Problem Solving, Part 2"".  This course builds off of skills learned in those two courses.  This is a project-based course.  Therefore, the projects are quite open-ended and there are multiple ways to solve the problems.  Through the use of Peer Review, other learners will grade learners' projects based on a grading rubric.",20788.0,23529.0,4.9,406.0
Features and Boundaries,https://www.coursera.org/learn/features-and-boundaries,Computer Science,Algorithms,Shree Nayar,"This course focuses on the detection of features and boundaries in images. Feature and boundary detection is a critical preprocessing step for a variety of vision tasks including object detection, object recognition and metrology – the measurement of the physical dimensions and other properties of objects. The course presents a variety of methods for detecting features and boundaries and shows how features extracted from an image can be used to solve important vision tasks.

We begin with the detection of simple but important features such as edges and corners. We show that such features can be reliably detected using operators that are based on the first and second derivatives of images. Next, we explore the concept of an “interest point” – a unique and hence useful local appearance in an image. We describe how interest points can be robustly detected using the SIFT detector. Using this detector, we describe an end-to-end solution to the problem of stitching overlapping images of a scene to obtain a wide-angle panorama. Finally, we describe the important problem of finding faces in images and show several applications of face detection.",1552.0,9442.0,4.9,14.0
Genome Assembly Programming Challenge,https://www.coursera.org/learn/assembling-genomes,Computer Science,Algorithms,"Neil Rhodes, Michael Levin, Michael Levin, Pavel  Pevzner, Alexander S. Kulikov","In Spring 2011, thousands of people in Germany were hospitalized with a deadly disease that started as food poisoning with bloody diarrhea and often led to kidney failure. It was the beginning of the deadliest outbreak in recent history, caused by a mysterious bacterial strain that we will refer to as E. coli X. Soon, German officials linked the outbreak to a restaurant in Lübeck, where nearly 20% of the patrons had developed bloody diarrhea in a single week. At this point, biologists knew that they were facing a previously unknown pathogen and that traditional methods would not suffice – computational biologists would be needed to assemble and analyze the genome of the newly emerged pathogen.

To investigate the evolutionary origin and pathogenic potential of the outbreak strain, researchers started a crowdsourced research program. They released bacterial DNA sequencing data from one of a patient, which elicited a burst of analyses carried out by computational biologists on four continents. They even used GitHub for the project: https://github.com/ehec-outbreak-crowdsourced/BGI-data-analysis/wiki

The 2011 German outbreak represented an early example of epidemiologists collaborating with computational biologists to stop an outbreak. In this online course you will follow in the footsteps of the bioinformaticians investigating the outbreak by developing a program to assemble the genome of the E. coli X from millions of overlapping substrings of the E.coli X genome.",35939.0,7064.0,4.5,307.0
Geometric Algorithms,https://www.coursera.org/learn/geometric-algorithms,Computer Science,Algorithms,Kevin Buchin,"Course Information: In many areas of computer science such as robotics, computer graphics, virtual reality, and geographic information systems, it is necessary to store, analyze, and create or manipulate spatial data. This course deals with the algorithmic aspects of these tasks: we study techniques and concepts needed for the design and analysis of geometric algorithms and data structures. Each technique and concept will be illustrated on the basis of a problem arising in one of the application areas mentioned above.

Goals:
At the end of this course participants should be able
- to decide which algorithm or data structure to use in order to solve a given basic geometric problem,
- to analyze new problems and come up with their own efficient solutions using concepts and techniques from the course.

Prerequisites:
In order to successfully take this course, you should already have a basic knowledge of algorithms and mathematics. Here's a short list of what you are supposed to know:
- O-notation, Ω-notation, Θ-notation; how to analyze algorithms
- Basic calculus: manipulating summations, solving recurrences, working with logarithms, etc.
- Basic probability theory: events, probability distributions, random variables, expected values etc.
- Basic data structures: linked lists, binary search trees, etc.
- Graph terminology
- Programming skills for practical assignments

Most of the material in this course is based on the following book:
M. de Berg, O. Cheong, M. van Kreveld, and M. Overmars. Computational Geometry: Algorithms and Applications (3rd edition). Springer-Verlag, 2008.
It is not mandatory to buy this book. However if participants want to know more than is offered in this course or want to have another look at the material discussed in the lectures, we recommend buying this book.

The video lectures contain a few very minor mistakes. A list of these mistakes can be found under resources. If you think you found an error, report a problem by clicking the square flag at the bottom of the lecture or quiz where you found the error.",6639.0,3016.0,4.4,18.0
"Graph Search, Shortest Paths, and Data Structures",https://www.coursera.org/learn/algorithms-graphs-data-structures,Computer Science,Algorithms,Tim Roughgarden,"The primary topics in this part of the specialization are: data structures (heaps, balanced search trees, hash tables, bloom filters), graph primitives (applications of breadth-first and depth-first search, connectivity, shortest paths), and their applications (ranging from deduplication to social network analysis).",74807.0,35844.0,4.8,1915.0
"Greedy Algorithms, Minimum Spanning Trees, and Dynamic Programming",https://www.coursera.org/learn/algorithms-greedy,Computer Science,Algorithms,Tim Roughgarden,"The primary topics in this part of the specialization are: greedy algorithms (scheduling, minimum spanning trees, clustering, Huffman codes) and dynamic programming (knapsack, sequence alignment, optimal search trees).",66306.0,30396.0,4.8,1204.0
How to find audience interests with Meta Business Suite,https://www.coursera.org/learn/how-to-find-audience-interests-with-meta-business-suite,Computer Science,Algorithms,Nicole Alvelo,"Facebook has a new name, and with that new name also, a new platform for their businesses. Now, better known today as Meta has a new view of everything in the Business Suite, and we want to show you how the new tools work. These will show you how to find Facebook Audience Insight. This project will show the tools you need to know this game of Meta Business Suite. That will help you find the audience following you, the one you want to impact, and how this affects or provides better options for your business. You will know all the statistics, ages, countries, or cities where your followers or buyers are registered. So in this project, you will see all the options available to create content and ads aimed at your audience, which points to fantastic opportunities for your business. You will be able to see how to create an ad aimed at the audience you want and validate how the campaigns you have created offer feedback. This project is for you if you want to learn about everything Meta Business Suite offers in your audience area. We are going to practice and put hands-on work on what we learn. Be prepared to learn a lot and practice for your next project.",,,,
I/O-efficient algorithms,https://www.coursera.org/learn/io-efficient-algorithms,Computer Science,Algorithms,Mark de Berg,"Operations on data become more expensive when the data item is located higher in the memory hierarchy. An operation on data in CPU registers is roughly a million times faster than an operation on a data item that is located in external memory that needs to be fetched first. These data fetches are also called I/O operations and need to be taken into account during the design of an algorithm. The goal of this course is to become familiar with important algorithmic concepts and techniques needed to effectively deal with such problems. We will work with a simplified memory hierarchy, but the notions extend naturally to more realistic models. 

Prerequisites:
In order to successfully take this course, you should already have a basic knowledge of algorithms and mathematics. Here's a short list of what you are supposed to know:
- O-notation, Ω-notation, Θ-notation; how to analyze algorithms
- Basic calculus: manipulating summations, solving recurrences, working with logarithms, etc.
- Basic probability theory: events, probability distributions, random variables, expected values etc.
- Basic data structures: linked lists, stacks, queues, heaps
- (Balanced) binary search trees
- Basic sorting algorithms, for example MergeSort, InsertionSort, QuickSort
- Graph terminology, representations of graphs (adjacency lists and adjacency matrix), basic graph algorithms (BFS, DFS, topological sort, shortest paths)

The material for this course is based on the course notes that can be found under the resources tab.  We will not cover everything from the course notes. The course notes are there both for students who did not fully understand the lectures as well as for students who would like to dive deeper into the topics.

The video lectures contain a few very minor mistakes. A list of these mistakes can be found under resources. If you think you found an error, report a problem by clicking the square flag at the bottom of the lecture or quiz where you found the error.",6469.0,8493.0,4.6,56.0
Image Processing: Object Auto-tracking using Tracker,https://www.coursera.org/learn/object-tracking-using-tracker,Computer Science,Algorithms,Abdallah Mohamed,"By the end of this project, you will be able to track two different objects easily using Tracker. You will be able to  adjust video clip settings and make clips of it.Moreover, you will be able to calibrate your video and set up your coordinate axis. Learning such a skill can help you in your research projects at university or work. It is an added skill to your data analysis skills set that can give you a competitive edge in data science or computer vision career related opportunities. If you are an educator,  it will help you to analyze real world physics problems with your students.",,,,
Image Segmentation with Python and Unsupervised Learning,https://www.coursera.org/learn/image-segmentation-python-unsupervised-learning,Computer Science,Algorithms,Daniel Romaniuk,"In this one hour long project-based course, you will tackle a real-world problem in computer vision called segmentation.  Segmentation means taking an image and partitioning it into different regions that capture the different elements of interest in the scene.

We will tackle this problem using an unsupervised learning technique called K-means.

By the end of this project, you will have segmented an image with unsupervised learning, using code you will write in Python.",,,4.6,17.0
Inteligencia Artificial centrada en el ser humano,https://www.coursera.org/learn/inteligencia-artificial-centrada-en-el-ser-humano,Computer Science,Algorithms,Florian Richter,"Este curso presenta los fundamentos conceptuales de la inteligencia artificial. Comienza con los antecedentes históricos. Los principales conceptos se desarrollarán de forma sistemática y se analizarán desde una perspectiva filosófica. Las preguntas principales son: ¿Qué es la inteligencia y qué significa pensar y hablar un idioma?, ¿Cuáles son las implicaciones éticas y sociales de la inteligencia artificial?

Los objetivos son los siguientes:

1. Reconocer y comprender las ideas principales de la IA.
2. Analizar los conceptos fundamentales de la IA.
3. Evaluar estos conceptos fundamentales desde una perspectiva filosófica, ética y social",2428.0,22818.0,4.5,11.0
Inteligencia artificial: proyecto final,https://www.coursera.org/learn/inteligencia-artificial,Computer Science,Algorithms,"Carlos Gershenson, David A. Rosenblueth, Stalin Muñoz Gutiérrez, Gibran Fuentes Pineda, Katya Rodríguez Vázquez, Dra. Wendy Elizabeth Aguilar Martínez","En el proyecto culminante del programa especializado Introducción a la Inteligencia Artificial, los estudiantes aplicarán conceptos adquiridos durante el programa en un problema de su elección.

El proyecto involucrará el desarrollo de un programa de software y la escritura de un ensayo. Se extenderá por lo menos uno de los temas cubiertos en el programa especializado, realizando una implementación, comparándolo con otras técnicas y reportando los resultados en un ensayo. La evaluación será por pares.

Los objetivos del proyecto son:

    * Aplicar el conocimiento adquirido durante el programa especializado a un dominio particular.
    * Implementar tecnología de IA con un propósito específico.
    * Comparar la solución desarrollada con existentes.
    * Reportar los resultados en un ensayo estructurado (máximo 10 páginas).",,,,
"Interpersonal, Developmental, and Evolutionary Perspectives of the Mind",https://www.coursera.org/learn/mind-machine-perspectives,Computer Science,Algorithms,David Quigley,"In this course, we will explore how individual problem solving, judgment, and decision making can be influenced by interpersonal and developmental factors.",3649.0,2133.0,4.3,28.0
Introduction to Basic Game Development using Scratch,https://www.coursera.org/learn/introduction-to-basic-game-development-using-scratch,Computer Science,Algorithms,Stacey Shanklin-Langford,"By the end of this project, you will create a basic game using an introductory, web-based coding program called Scratch.  Learning to code will allow you to build basic coding or computer science skills and a fundamental understanding in order to grow your programming abilities. Learners will engage in the design process in order to develop an understanding of how to develop algorithms that control programs, use event-driven programming, and debug a program.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",36555.0,,4.5,1231.0
Introduction to Graph Theory,https://www.coursera.org/learn/graphs,Computer Science,Algorithms,Alexander S. Kulikov,"We invite you to a fascinating journey into Graph Theory — an area which connects the elegance of painting and the rigor of mathematics; is simple, but not unsophisticated. Graph Theory gives us, both an easy way to pictorially represent many major mathematical results, and insights into the deep theories behind them. 

In this online course, among other intriguing applications, we will see how GPS systems find shortest routes, how engineers design integrated circuits, how biologists assemble genomes, why a political map can always be colored using a few colors. We will study Ramsey Theory which proves that in a large system, complete disorder is impossible! 

By the end of the course, we will implement an algorithm which finds an optimal assignment of students to schools. This algorithm, developed by David Gale and Lloyd S. Shapley, was later recognized by the conferral of Nobel Prize in Economics.

As prerequisites we assume only basic math (e.g., we expect you to know what is a square or how to add fractions), basic programming in python (functions, loops, recursion), common sense and curiosity. Our intended audience are all people that work or plan to work in IT, starting from motivated high school students.",43381.0,23415.0,4.5,898.0
Introduction à la programmation,https://www.coursera.org/learn/programmation,Computer Science,Algorithms,"Laurent Moccozet, Alexandre De Masi","Quel que soit votre domaine d’études, vos activités professionnelles futures vous confronteront régulièrement aux technologies numériques. Même si ces technologies sont rendues aussi intuitives que possible, il est souvent nécessaire de les configurer ou de les adapter pour pouvoir les exploiter de façon optimale. Des compétences de base de la pensée informatique et de la programmation vous permettront de franchir ces étapes de façon appropriée. L’initiation à la programmation permet concrètement de s’ouvrir à la pensée informatique et à la mettre en pratique.

Vous pouvez conduire une voiture sans avoir de connaissances mécaniques, mais des compétences de base vous permettront d’améliorer son usage. L’objectif de cours est de vous permettre d’améliorer votre approche des technologies numériques de façon à les adapter à vos besoins plutôt que de les subir et de vous adapter à elles.

Cette initiation à la programmation vous permettra de mieux appréhender et contrôler l’environnement numérique dans lequel vous serez immergé que ce soit pour vos activités personnelles et surtout, professionnelles.",,7604.0,,
"Le Où, Pourquoi et Comment des Fonctions Lambda en Python",https://www.coursera.org/learn/le-pourquoi-et-comment-des-fonctions-lambda,Computer Science,Algorithms,Eya Smati,"À la fin de ce projet, vous serez en mesure de maîtriser les utilisations de la fonction Lambda. Tout au long du projet, vous pourrez apprendre la notion de fonction dans le langage python , apprendre à coder une fonction lambda, apprendre à intégrer les structures conditionnelles dans une fonction Lambda,arriver à intégrer les fonctions Map, filter dans les fonctions Lambda et finalement voir les limites de cette fonction et les alternatives possibles .
Ce projet guidé est destiné aux apprenants de niveau débutants mais qui ont des bases algorithmiques comme connaître la notion de structure conditionnel If..else et la notion de boucle For et While et aussi une familiarité avec la syntaxe de la programmation python comme afficher et manipuler une variable.. mais veulent apprendre à utiliser et manipuler la fonction Lambda afin d’optimiser leur code .
Ce projet vous offrira en effet la possibilité avec une simple fonction d’optimiser vos codes et de gagner en temps et énergie ..maîtriser Une telle compétence reste rare aujourd’hui et très appréciée par les recruteurs et ajoutera certainement une valeur à votre CV et augmentera vos chances d’embauche dans les domaines du développement tel qu’il soit .",,,,
Mathematical Thinking in Computer Science,https://www.coursera.org/learn/what-is-a-proof,Computer Science,Algorithms,"Alexander S. Kulikov, Michael Levin, Владимир Подольский","Mathematical thinking is crucial in all areas of computer science: algorithms, bioinformatics, computer graphics, data science, machine learning, etc. In this course, we will learn the most important tools used in discrete mathematics: induction, recursion, logic, invariants, examples, optimality. We will use these tools to answer typical programming questions like: How can we be certain a solution exists? Am I sure my program computes the optimal answer? Do each of these objects meet the given requirements?

In the online course, we use a try-this-before-we-explain-everything approach: you will be solving many interactive (and mobile friendly) puzzles that were carefully designed to allow you to invent many of the important ideas and concepts yourself.

Prerequisites: 
1. We assume only basic math (e.g., we expect you to know what is a square or how to add fractions), common sense and curiosity. 
2. Basic programming knowledge is necessary as some quizzes require programming in Python.",118514.0,37923.0,4.4,2094.0
Methods for Solving Problems,https://www.coursera.org/learn/mind-machine-problem-solving-methods,Computer Science,Algorithms,David Quigley,"In this course, we will explore different types of problems, the boundaries of what makes a problem solvable, and the different algorithms, rules, and heuristics we can implement to solve these problems.",6408.0,37275.0,4.4,150.0
OpenVINO Beginner: Building a Crossroad AI Camera,https://www.coursera.org/learn/openvino-building-a-crossroad-ai-camera,Computer Science,Algorithms,Tebogo Nakampe,"In this 2-hour long project-based course, you will learn how to Build a Crossroad AI Camera:

Learning Objective 1: By the end of Task 1, you will be able to explain the OpenVINO™ Toolkit Workflow and OpenVINO™ Toolkit Components
Learning Objective 2: By the end of Task 2, you will be able to operationalize models using the Model Downloader utility
Learning Objective 3: By the end of Task 3, you will be able to perform Model Preparation, Conversion and Optimization
Learning Objective 4: By the end of Task 4, you will be able to Running and Tuning Inference
Learning Objective 5: By the end of Task 5, you will be able to create visualization of Person Attributes and Person Re-identification (REID) information for each detected person in an Image/Video/Camera input.",,,,
Operations Research (1): Models and Applications,https://www.coursera.org/learn/operations-research-modeling,Computer Science,Algorithms,孔令傑 (Ling-Chieh Kung),"Operations Research (OR) is a field in which people use mathematical and engineering methods to study optimization problems in Business and Management, Economics, Computer Science, Civil Engineering, Industrial Engineering, etc. This course introduces frameworks and ideas about various types of optimization problems in the business world. In particular, we focus on how to formulate real business problems into mathematical models that can be solved by computers.",16750.0,60060.0,4.8,286.0
Operations Research (2): Optimization Algorithms,https://www.coursera.org/learn/operations-research-algorithms,Computer Science,Algorithms,孔令傑 (Ling-Chieh Kung),"Operations Research (OR) is a field in which people use mathematical and engineering methods to study optimization problems in Business and Management, Economics, Computer Science, Civil Engineering, Electrical Engineering, etc.

The series of courses consists of three parts, we focus on deterministic optimization techniques, which is a major part of the field of OR.
As the second part of the series, we study some efficient algorithms for solving linear programs, integer programs, and nonlinear programs.
We also introduce the basic computer implementation of solving different programs, integer programs, and nonlinear programs and thus an example of algorithm application will be discussed.",6495.0,29980.0,4.8,47.0
Operations Research (3): Theory,https://www.coursera.org/learn/operations-research-theory,Computer Science,Algorithms,孔令傑 (Ling-Chieh Kung),"Operations Research (OR) is a field in which people use mathematical and engineering methods to study optimization problems in Business and Management, Economics, Computer Science, Civil Engineering, Electrical Engineering, etc.

The series of courses consists of three parts, we focus on deterministic optimization techniques, which is a major part of the field of OR.
As the third part of the series, we study mathematical properties of linear programs, integer programs, and nonlinear programs. We also introduce applications of these theoretical properties: How they help us develop better ways to solve mathematical programs.",3980.0,11057.0,5.0,42.0
Overview of Advanced Methods of Reinforcement Learning in Finance,https://www.coursera.org/learn/advanced-methods-reinforcement-learning-finance,Computer Science,Algorithms,Igor Halperin,"In the last course of our specialization, Overview of Advanced Methods of Reinforcement Learning in Finance, we will take a deeper look into topics discussed in our third course, Reinforcement Learning in Finance.

In particular, we will talk about links between Reinforcement Learning, option pricing and physics, implications of Inverse Reinforcement Learning for modeling market impact and price dynamics, and perception-action cycles in Reinforcement Learning. Finally, we will overview trending and potential applications of Reinforcement Learning for high-frequency trading, cryptocurrencies, peer-to-peer lending, and more.

After taking this course, students will be able to 
- explain fundamental concepts of finance such as market equilibrium, no arbitrage, predictability,
- discuss market modeling,
- Apply the methods of Reinforcement Learning to high-frequency trading, credit risk peer-to-peer lending, and cryptocurrencies trading.",10038.0,6021.0,3.8,76.0
Problem Solving Using Computational Thinking,https://www.coursera.org/learn/compthinking,Computer Science,Algorithms,Chris Quintana,"Have you ever heard that computers ""think""? Believe it or not, computers really do not think. Instead, they do exactly what we tell them to do. Programming is, ""telling the computer what to do and how to do it.""

Before you can think about programming a computer, you need to work out exactly what it is you want to tell the computer to do. Thinking through problems this way is Computational Thinking. Computational Thinking allows us to take complex problems, understand what the problem is, and develop solutions. We can present these solutions in a way that both computers and people can understand.

The course includes an introduction to computational thinking and a broad definition of each concept, a series of real-world cases that illustrate how computational thinking can be used to solve complex problems, and a student project that asks you to apply what they are learning about Computational Thinking in a real-world situation. This project will be completed in stages (and milestones) and will also include a final disaster response plan you'll share with other learners like you.

This course is designed for anyone who is just beginning programming, is thinking about programming or simply wants to understand a new way of thinking about problems critically. No prior programming is needed. The examples in this course may feel particularly relevant to a High School audience and were designed to be understandable by anyone.

You will learn:
-To define Computational Thinking components including abstraction, problem identification, decomposition, pattern recognition, algorithms, and evaluating solutions
-To recognize Computational Thinking concepts in practice through a series of real-world case examples
-To develop solutions through the application of Computational Thinking concepts to real world problems",78106.0,91212.0,4.6,1150.0
Procesamiento de Imágenes,https://www.coursera.org/learn/procesamiento-de-imagenes,Computer Science,Algorithms,Domingo Mery,"En este curso se estudiarán los fundamentos teóricos básicos que son aplicados en el área de Procesamiento de Imágenes, tales como formación de imágenes, mejoramiento de las imágenes en el dominio del espacio y de la frecuencia, filtros digitales, restauración de imágenes, procesamiento morfológico y segmentación tanto en imágenes en blanco y negro como a color. Los fundamentos teóricos aprendidos serán aplicados a problemas prácticos probando y programando algoritmos de procesamiento de imágenes en Python.

Con estos conocimientos, los estudiantes serán capaces de implementar algoritmos que procesen imágenes (ya sea en blanco y negro, binarias o a color), con el fin de mejorar su calidad o bien para extraer información relevante a partir de procesos automáticos.",,2570.0,,
Programming Fundamentals,https://www.coursera.org/learn/programming-fundamentals,Computer Science,Algorithms,"Andrew D. Hilton, Genevieve M. Lipp, Anne Bracy","Programming is an increasingly important skill, whether you aspire to a career in software development, or in other fields. This course is the first in the specialization Introduction to Programming in C, but its lessons extend to any language you might want to learn. This is because programming is fundamentally about figuring out how to solve a class of problems and writing the algorithm, a clear set of steps to solve any problem in its class. This course will introduce you to a powerful problem-solving process—the Seven Steps—which you can use to solve any programming problem. In this course, you will learn how to develop an algorithm, then progress to reading code and understanding how programming concepts relate to algorithms.",181458.0,166629.0,4.7,6444.0
Python Basics: Create a Guessing Number Game from Scratch,https://www.coursera.org/learn/python-basics-guess-the-number,Computer Science,Algorithms,Yousef Metwally,"By the end of this project, you will create a simple interactive game written in Python ‎language. You will learn and apply basic concepts of programming like: (Data types, ‎variables, conditional and Iterative statements) that will assist you to reach the aim of ‎being able to code your own games and daily tasks in python.‎

‎ Python language is one of the most accessible programming languages available because ‎of Its simplified syntax that gives emphasis on natural language. It is highly used in ‎machine learning and data science applications which are some of the biggest trends in ‎computer science right now. It is also supported by many corporations such as Facebook ‎and Amazon. It is specially adapted by Google making it the number one choice for many ‎programmers and engineers.‎


Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",4210.0,,4.7,95.0
Razonamiento artificial,https://www.coursera.org/learn/razonamiento-artificial,Computer Science,Algorithms,"David A. Rosenblueth, Stalin Muñoz Gutiérrez","El razonamiento formal juega un papel importante en la inteligencia artificial. Hay dos maneras principales de formalizar razonamiento: una que enfatiza la deducción (lógica), y otra que enfatiza la incertidumbre (teoría de la probabilidad). En este curso vamos a cubrir una introducción tanto a la lógica (vamos a cubrir tres lógicas) como a la teoría de la probabilidad (vamos a cubrir tres modelos gráficos probabilísticos). 

Algunas tareas requieren programación básica en Python: El alumno deberá completar código al que se le ha eliminado una parte.",7121.0,4161.0,4.2,90.0
Recognizing Shapes in Images with OpenCV,https://www.coursera.org/learn/recognizing-shapes-images-opencv,Computer Science,Algorithms,Daniel Romaniuk,"In this 1.5 hour long project-based course, you will apply computer vision techniques to process images, extract useful features and detect shapes using Hough transforms.

By the end of this project, you will have analyzed real-world images using industry standard tools, including Python and OpenCV.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",,,,
Resolución de problemas por búsqueda,https://www.coursera.org/learn/resolucion-busqueda,Computer Science,Algorithms,Stalin Muñoz Gutiérrez,"El curso trata de resolución automática de problemas por medio de algoritmos de búsqueda.

Aprenderás a abstraer un problema como un grafo de estados-acciones y a dimensionar su complejidad por medio de la identificación de parámetros. Además, te mostraremos cómo analizar el consumo de recursos computacionales de los algoritmos para seleccionar o adaptar el más apropiado al problema.
Nos interesa que puedas aplicar los algoritmos a problemas concretos.
Te acompañaremos en la implementación de los algoritmos en el lenguaje de programación Python y te mostraremos algunos ejemplos de su aplicación a ciertos problemas modelo.
Al final podrás probar tus algoritmos en un espacio de búsqueda interesante: el resolver el cubo de Rubik.",4132.0,3643.0,4.5,19.0
Robot Localization with Python and Particle Filters,https://www.coursera.org/learn/robot-localization-python-particle-filter,Computer Science,Algorithms,Daniel Romaniuk,"In this one hour long project-based course, you will tackle a real-world problem in robotics.  We will be simulating a robot that can move around in an unknown environment, and have it discover its own location using only a terrain map and an elevation sensor.  We will encounter some of the classic challenges that make robotics difficult: noisy sensor data, and imprecise movement.

We will tackle these challenges with an artificial intelligence technique called a particle filter.

By the end of this project, you will have coded a particle filter from scratch using Python and numpy. 

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",,,4.6,14.0
Sesenta años de inteligencia artificial,https://www.coursera.org/learn/sesenta-anos-inteligencia-artificial,Computer Science,Algorithms,Carlos Gershenson,"En este curso, ofrecido por la UNAM, cubriremos el pasado, presente y futuro de la inteligencia artificial. También mencionaremos los conceptos más importantes que serán útiles en el resto del programa especializado. Discutiremos las implicaciones sociales, éticas y filosóficas de los desarrollos en inteligencia artificial.",14350.0,6965.0,4.8,352.0
"Shortest Paths Revisited, NP-Complete Problems and What To Do About Them",https://www.coursera.org/learn/algorithms-npcomplete,Computer Science,Algorithms,Tim Roughgarden,"The primary topics in this part of the specialization are: shortest paths (Bellman-Ford, Floyd-Warshall, Johnson), NP-completeness and what it means for the algorithm designer, and strategies for coping with computationally intractable problems (analysis of heuristics, local search).",38657.0,17558.0,4.8,778.0
Sort students marks using bubble and insertion algorithms,https://www.coursera.org/learn/sort-students-marks-using-bubble-and-insertion-algorithms,Computer Science,Algorithms,Dr. Chao Mbogho,"The learner will create two sorting algorithms in Java programming language.  The learner will create an optimised bubble sort function that sorts students' marks in ascending order by repeatedly swapping adjacent elements within an array if they are in the wrong order.  The learner will also create an insertion sort function that sorts students' marks in ascending order by building a sorted array, one element at a time.",,,,
Technologies and platforms for Artificial Intelligence,https://www.coursera.org/learn/technologies-and-platforms-for-artificial-intelligence,Computer Science,Algorithms,Manuel Roveri,This course will address the hardware technologies for machine and deep learning (from the units of an Internet-of-Things system to a large-scale data centers) and will explore the families of machine and deep learning platforms (libraries and frameworks) for the design and development of smart applications and systems.,,1789.0,,
Text Generation with Markov Chains in Python,https://www.coursera.org/learn/text-generation-markov-chains-python,Computer Science,Algorithms,Daniel Romaniuk,"In this project-based course, you will learn about Markov chains and use them to build a probabilistic model of an entire book’s text.  This will be done from first principles, without libraries.  

Markov chains are a simple but fundamental approach to modeling stochastic processes, with many practical applications.  By the end of this project, you will have generated a random new text based on the book you modeled, using code you wrote in Python.",,,,
The Blockchain,https://www.coursera.org/learn/uciblockchain,Computer Science,Algorithms,Stefano M. Stefan,"Begin your exploration of blockchain technologies with a look at fundamental blockchain concepts along with an application in which blockchain technology plays a critical role — cryptofinance. This course also introduces distributed digital systems in terms of software and network architecture, and shows how these systems underlie the functionality of the blockchain. In this and the following courses in the specialization you'll have a chance for hands-on-practice to cement your learning.

This course requires the purchase of two books for the completion of assignments:

Drescher, D. (2017). Blockchain Basics: A Non-Technical Introduction in 25 Steps. (ISBN-13: 978-1484226032)
Antonoupoulos, A. M. (2017). The Internet of Money, Volume Two. (ISBN-13: 978-1947910065)",12644.0,6128.0,4.1,139.0
The Blockchain System,https://www.coursera.org/learn/blockchain-system,Computer Science,Algorithms,Stefano M. Stefan,"Learn how the blockchain authenticates transactions and distributes data to peers — nodes connected to the network. This course shows you how multiple versions of a blockchain are reconciled into one, discusses blockchain limitations, and delves into organizational applications of blockchain technology.

This course requires the purchase of two books for the completion of assignments:

Drescher, D. (2017). Blockchain Basics: A Non-Technical Introduction in 25 Steps. (ISBN-13: 978-1484226032)
Antonoupoulos, A. M. (2017). The Internet of Money, Volume Two. (ISBN-13: 978-1947910065)",4220.0,2915.0,4.0,26.0
The Merkle Tree and Cryptocurrencies,https://www.coursera.org/learn/merkle-cryptocurrencies,Computer Science,Algorithms,Stefano M. Stefan,"Apply what you have learned about cryptography and hashing in previous blockchain to the Merkle Tree, which underlies the process of adding new blocks — representing new transactions — to the blockchain. This course also introduces the concepts of proof of work and proof of stake, which play an important part in ensuring the integrity of the blockchain.

This course requires the purchase of two books for the completion of assignments:

Drescher, D. (2017). Blockchain Basics: A Non-Technical Introduction in 25 Steps. (ISBN-13: 978-1484226032)
Antonoupoulos, A. M. (2017). The Internet of Money, Volume Two. (ISBN-13: 978-1947910065)",3591.0,2353.0,4.7,22.0
Tracking Objects in Video with Particle Filters,https://www.coursera.org/learn/tracking-objects-video-particle-filter,Computer Science,Algorithms,Daniel Romaniuk,"In this one hour long project-based course, you will tackle a real-world computer vision problem.  We will be locating and tracking a target in a video shot with a digital camera.   We will encounter some of the classic challenges that make computer vision difficult: noisy sensor data, objects that change shape, and occlusion (object hidden from view).  

We will tackle these challenges with an artificial intelligence technique called a particle filter.

By the end of this project, you will have coded a particle filter from scratch using Python and numpy. 

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",,,,
Trees and Graphs: Basics,https://www.coursera.org/learn/trees-graphs-basics,Computer Science,Algorithms,Sriram Sankaranarayanan,"Basic algorithms on tree data structures, binary search trees, self-balancing trees, graph data structures and basic traversal algorithms on graphs. This course also covers advanced topics such as kd-trees for spatial data and algorithms for spatial data.

Trees and Graphs: Basics can be taken for academic credit as part of CU Boulder’s Master of Science in Data Science (MS-DS) degree offered on the Coursera platform. The MS-DS is an interdisciplinary degree that brings together faculty from CU Boulder’s departments of Applied Mathematics, Computer Science, Information Science, and others. With performance-based admissions and no application process, the MS-DS is ideal for individuals with a broad range of undergraduate education and/or professional experience in computer science, information science, mathematics, and statistics. Learn more about the MS-DS program at https://www.coursera.org/degrees/master-of-science-data-science-boulder.",5877.0,63354.0,4.7,47.0
Use Java APIs to sort and search a collection of data,https://www.coursera.org/learn/use-java-apis-to-sort-and-search-a-collection-of-data,Computer Science,Algorithms,Dr. Chao Mbogho,"In this project, the learner will use the Java API to sort and search arrays and lists by implementing the Collections sort function, the binarySearch function, and the Comparator and Comparable interfaces.",,,,
VLSI CAD Part I: Logic,https://www.coursera.org/learn/vlsi-cad-logic,Computer Science,Algorithms,Rob A. Rutenbar,"A modern VLSI chip has a zillion parts -- logic, control, memory, interconnect, etc.  How do we design these complex chips?  Answer: CAD software tools.  Learn how to build thesA modern VLSI chip is a remarkably complex beast:  billions of transistors, millions of logic gates deployed for computation and control, big blocks of memory, embedded blocks of pre-designed functions designed by third parties (called “intellectual property” or IP blocks).  How do people manage to design these complicated chips?  Answer: a sequence of computer aided design (CAD) tools takes an abstract description of the chip, and refines it step-wise to a final design. This class focuses on the major design tools used in the creation of an Application Specific Integrated Circuit (ASIC) or System on Chip (SoC) design. Our focus in this first part of the course is on key Boolean logic representations that make it possible to synthesize, and to verify, the gate-level logic in these designs.  This is the first step of the design chain, as we move from logic to layout.    Our goal is for students to understand how the tools themselves work, at the level of their fundamental algorithms and data structures. Topics covered will include: Computational Boolean algebra, logic verification, and logic synthesis (2-level and multi-level).

Recommended Background
Programming experience (C, C++, Java, Python, etc.) and basic knowledge of data structures and algorithms (especially recursive algorithms).  An understanding of basic digital design:  Boolean algebra, Kmaps, gates and flip flops, finite state machine design.  Linear algebra and calculus at the level of a junior or senior in engineering.  Exposure to basic VLSI at an undergraduate level is nice -- but it’s not necessary.  We will keep the course self-contained, but students with some VLSI will be able to skip some background material.e tools in this class.",42837.0,32434.0,4.7,505.0
VLSI CAD Part II: Layout,https://www.coursera.org/learn/vlsi-cad-layout,Computer Science,Algorithms,Rob A. Rutenbar,"You should complete the VLSI CAD Part I: Logic course before beginning this course.

A modern VLSI chip is a remarkably complex beast:  billions of transistors, millions of logic gates deployed for computation and control, big blocks of memory, embedded blocks of pre-designed functions designed by third parties (called “intellectual property” or IP blocks).  How do people manage to design these complicated chips?  Answer:  a sequence of computer aided design (CAD) tools takes an abstract description of the chip, and refines it step-wise to a final design. This class focuses on the major design tools used in the creation of an Application Specific Integrated Circuit (ASIC) or System on Chip (SoC) design.  Our focus in this part of the course is on the key logical and geometric representations that make it possible to map from logic to layout, and in particular, to place, route, and evaluate the timing of large logic networks. Our goal is for students to understand how the tools themselves work, at the level of their fundamental algorithms and data structures. Topics covered will include: technology mapping, timing analysis, and ASIC placement and routing.

Recommended Background:
Programming experience (C, C++, Java, Python, etc.) and basic knowledge of data structures and algorithms (especially recursive algorithms).  An understanding of basic digital design:  Boolean algebra, Kmaps, gates and flip flops, finite state machine design.  Linear algebra and calculus at the level of a junior or senior in engineering.  Elementary knowledge of RC linear circuits (at the level of an introductory physics class).",18180.0,11800.0,4.8,267.0
Visual Perception,https://www.coursera.org/learn/perception,Computer Science,Algorithms,Shree Nayar,"The ultimate goal of a computer vision system is to generate a detailed symbolic description of each image shown. This course focuses on the all-important problem of perception. 

We first describe the problem of tracking objects in complex scenes. We look at two key challenges in this context. The first is the separation of an image into object and background using a technique called change detection. The second is the tracking of one or more objects in a video. Next, we examine the problem of segmenting an image into meaningful regions. In particular, we take a bottom-up approach where pixels with similar attributes are grouped together to obtain a region. 

Finally, we tackle the problem of object recognition. We describe two approaches to the problem. The first directly recognize an object and its pose using the appearance of the object. This method is based on the concept of dimension reduction, which is achieved using principal component analysis. The second approach is to use a neural network to solve the recognition problem as one of learning a mapping from the input (image) to the output (object class, object identity, activity, etc.). We describe how a neural network is constructed and how it is trained using the backpropagation algorithm.",,4568.0,,
What is “the mind” and what is artificial intelligence?,https://www.coursera.org/learn/mind-machine-artificial-intelligence,Computer Science,Algorithms,David Quigley,"In this course, we will explore the history of cognitive science and the way these ideas shape how we think of artificial cognition.",10546.0,3355.0,4.4,132.0
Write a Mini Reservation Application with Kotlin,https://www.coursera.org/learn/mini-reservation-kotlin,Computer Science,Algorithms,Harrison Kong,"In this 1.5  hours project-based course, you will complete and improve a mini airline reservation application and learn more advanced concepts of Kotlin such as higher order functions, lambda expressions, infix notation, Java interoperability, and many more. At the end of the class you will have a deepened understanding of Kotlin.",,,,
"Алгоритмы, часть I",https://www.coursera.org/learn/algorithms-part1-ru,Computer Science,Algorithms,"Robert Sedgewick, Kevin Wayne","Данный курс охватывает ключевые знания об алгоритмах и структурах данных, которыми обязан владеть каждый профессиональный программист. При этом акцент сделан на практических областях применения и научном анализе эффективности алгоритмов, реализованных на Java. В части I рассматриваются элементарные структуры данных, а также алгоритмы сортировки и поиска. В части II освещаются алгоритмы обработки графов и строк.

Все компоненты этого курса предоставляются бесплатно. При этом по завершении не выдаются какие-либо сертификаты.",5645.0,12617.0,4.9,13.0
أساسيات python: برمج لعبة تخمين الرقم من الصفر,https://www.coursera.org/learn/python-basics-guess-the-number-arabic,Computer Science,Algorithms,Yousef Metwally,"في هذه الدورة التدريبية القائمة على المشروع والتي تستغرق ساعة واحدة، ستتعلم كيفية عمل لعبة تفاعلية بسيطة عن طريق لغة البرمجة python. هتتعلم و تطبق أسس البرمجة زي ال (Data types, variables, conditional and Iterative statements). 
دا هيساعدك انك تكتب كود لألعاب تانية و مهماتك الحياتية باستخدام  python.

لغة python هي واحدة من أهم و أكثر لغات البرمجة استخداما و دا يرجع لسهولة ال syntax او الكلمات المستخدمة فيها اللي قريبة جدا من لغتنا العادية. حاليا لغة python بتستخدم كتير في تطبيقات الذكاء الاصطناعي ومعالجة البيانات و دول من أكثر المواضيع المنتشرة حاليا في مجال الحاسبات و المعلومات. حاليا جوجل بتدعم python و بتستخدمها عشان كدا دا مخليها الاختيار الأول لكثير من المهندسين والمبرمجين.

ملاحظة: تعمل هذه الدورة التدريبية بشكل أفضل للمتعلمين المقيمين في منطقة أمريكا الشمالية. نعمل حاليًا على توفير نفس التجربة في مناطق أخرى.

Note: This course works best for learners who are based in the North America region. We’re currently working on providing the same experience in other regions.",,,,
人工智慧：搜尋方法與邏輯推論 (Artificial Intelligence - Search & Logic),https://www.coursera.org/learn/rengong-zhineng,Computer Science,Algorithms,于天立,"本課程分為人工智慧（上）、人工智慧（下）兩部份，第一部分除了人工智慧概論外，著重在目標搜尋、meta heuristic、電腦對弈、演繹學習（包含證言邏輯、一階邏輯及 planning ）等技術。這些技術主要發展時機為人工智慧的第一波及第二波熱潮，也就是 1950 年代至 1990 年代附近的主流發展，即使到現在也在各個領域廣為應用。

課程教學目標：
使同學對人工智慧有基礎概念
同學能夠理解如何運用目標搜尋技術及演繹學習方式達成人工智慧
同學能將相關技術應用到自己的問題上",20472.0,13888.0,4.8,256.0
数据结构基础,https://www.coursera.org/learn/shuju-jiegou-suanfa,Computer Science,Algorithms,Prof. Ming Zhang 张铭,"学了C/C++ 语言，我们已经会编程解题了，那怎么用来处理实际的问题呢？

怎么设计数据结构来有效地管理企业人员？如何编写程序没让人才和岗位达到最佳匹配？如何安排旅行计划，找到最佳行程路径？这些学习、工作、生活中常常困扰我们的问题，你将在《数据结构基础》课程中找到答案。
数据结构是计算机程序设计的基础，告诉我们数据在计算机里是如何组织与存储的，能帮助我们刻画实际问题中的信息及其相互关系。当我们对一个实际问题本身有了一个结构化的认识之后，就可以选择合适的解决方法了。
完成这门课之时，你将掌握线性表、栈与队列、字符串、二叉树、树、图等经典的数据结构，并运用这些基础数据结构和相关算法解决实际应用问题。扎实的数据结构知识是项目开发与结构层次设计的关键，学好这门课会让你在高年级的计算机专业课程以及毕业项目设计中事半功倍，同时也将为你成为一名优秀的程序设计人员打下坚实的基础。

附：本课程的内容来自教材：《数据结构与算法》（张铭、王腾蛟、赵海燕 编著），高等教育出版社，2008年。",23513.0,4067.0,4.2,250.0
离散数学,https://www.coursera.org/learn/discrete-mathematics-ch,Computer Science,Algorithms,Long Huan 龙环,离散数学是计算机专业基础课程之一。本课程重点讲解离散对象的计数问题、图论问题、网络流问题等计算机科学中的重要基本知识。本课程将为后续如数据结构、算法设计、复杂性理论提供必要的基础，课程内容在人工智能、机器学习、网络设计与分析等前沿领域有重要应用。课程重点培养学生逻辑思维能力及解决问题的能力。,8262.0,2827.0,4.4,27.0
离散数学概论 Discrete Mathematics Generality,https://www.coursera.org/learn/dmathgen,Computer Science,Algorithms,陈斌,"离散数学是计算机科学的基础理论，离散结构的基础知识和逻辑思维的形式化是信息技术类学生的基本功，离散数学的基本概念是理科专业学生进行信息类课程学习的重要基础。

本课程介绍计算机科学和信息技术理论基础的概念和思想方法，介绍数理逻辑、集合论、图论、抽象代数和形式语言与自动机等各部分的基本概念，介绍离散数学基本概念和空间信息技术之间的联系与结合，培养学生理解和掌握离散数学基本概念，采用形式化方法分析问题，并能自觉运用逻辑分析、结构层次分析和同构类比等思想方法解决问题的能力。",25304.0,17884.0,4.7,265.0
程序开发项目实践,https://www.coursera.org/learn/biancheng-suanfa-biye-xiangmu,Computer Science,Algorithms,"郭 炜, Jiaying Liu 刘家瑛, Ph.D., Ge Li  李戈, Ph.D., Prof. Ming Zhang 张铭","作为“程序设计与算法”系列专项课程的结业实践项目，我们联合腾讯公司，为大家设计了一个实际应用问题——搜索引擎设计。这是互联网公司中极具代表的实际开发项目。如何高效地进行检索？如何有效地提升搜索的精度？… 将要求你解决一系列搜索引擎设计中面临的实际问题。通过这个项目实践，我们希望能够对你的实际编程能力进行衡量，也希望你能够充分展现自己所学到的知识和技能。我们将在项目展开的过程中提供腾讯资深工程师的专业解答，并从完成项目的学习者中选拔部分同学参与在腾讯公司的现场交流。完成本实践项目，表明你已经具备了在企业承担程序研发工作的能力。

第一期的结业实践项目初步定为2016年6月。",,,,
算法基础,https://www.coursera.org/learn/suanfa-jichu,Computer Science,Algorithms,"Jiaying Liu 刘家瑛, Ph.D., 郭 炜",算法代表着用系统的方法描述解决问题的策略机制，北京大学《算法基础》课程将带你一一探索枚举、二分、贪心、递归、深度优先搜索、广度优先搜索、动态规划等经典算法，体会他们巧妙的构思，感受他们利用计算解决问题的独特魅力。顺利完成本课程，你将不但能够掌握这些算法的原理，还能够对这些算法进行灵活应用以及准确实现。本课程的中的编程任务，将充分训练你的思维能力和动手能力，促成全面、缜密思考问题的习惯。达到本门课程的要求，即意味者你具备了初步的算法基础和较强的编程实现能力。,25358.0,4829.0,4.8,321.0
算法设计与分析   Design and Analysis of Algorithms,https://www.coursera.org/learn/algorithms,Computer Science,Algorithms,Wanling Qu,"课程教学目标

针对实际问题需求，进行数学建模并选择高效求解算法的训练，为提高学生的素质和创新能力打下必要的基础。主要内容涉及：面对实际问题建立数学模型、设计正确的求解算法、算法的效率估计、改进算法的途径、问题计算复杂度的估计、难解问题的确定和应对策略等等。本课程是算法课程的基础部分，主要涉及算法的设计、分析与改进途径，其他有关计算复杂性的内容将在后续课程中加以介绍。

课程内容安排

本课程的内容分成两大部分：算法的基础知识、通用算法设计技术与分析方法。

第一部分是算法基础知识，约占20%，主要介绍算法相关的基本概念和数学基础。比如，什么是算法的伪码描述？什么是算法最坏情况下和平均情况下的时间复杂度？算法时间复杂度函数的主要性质，算法复杂度估计中常用的数学方法，如序列求和及递推方程求解。

第二部分是通用的算法设计技术与分析方法，主要介绍分治策略、动态规划、贪心法、回溯与分支限界。主要介绍这些设计技术的使用条件、分析方法、改进途径，并给出一些重要的应用。",10702.0,5605.0,4.7,50.0
面向对象技术高级课程（The Advanced Object-Oriented Technology）,https://www.coursera.org/learn/aoo,Computer Science,Algorithms,"蒋 严冰, 邵 维忠","如果将软件开发人员看作行走江湖的武侠，那么各种软件开发技术就是武侠赖以傍身的武术秘籍。有的秘籍以易学灵巧见长，练习者很快掌握，并有立竿见影的功效，但失之厚重持久；有的秘籍初学乍练顿显困难，虽冥思苦解仍不得要领，需坚持不断的内功修炼方成正果，却是成为武林大侠必备的至宝。本课程有些类似于后者。

《面向对象技术高级课程》深入、系统、完整地讲解当今主流的面向对象软件开发方法的分析、设计、实现及重构方法，深入讲解UML语言的高级技术细节，以及近年来面向对象方法最新的发展趋势。课程集百家之所言，并结合主讲者最新的研究成果，并通过大量、丰富、完整、不同领域、应用不同技术的案例将其中的关键知识点串联起来，便于理解和应用。

本课程并不拘限于某一特定的面向对象的编程语言的编程技巧，但却包含了基于当前主流的面向对象编程语言的多项完整案例。本课程引导选课同学从更为抽象和共性的模型角度描述现实世界和软件世界,即构建分析与设计模型，之后再将其落实到软件编程实现。这种工程化的理念对于开发大型、复杂、困难、攸关软件系统是非常必要的，也是作为高级程序员、系统分析师、软件架构师等高级软件技术职位所必需具有的素质。

作为一门面向广大受众的中文MOOC课程，本次课程力求向不同需求和背景的朋友呈现中华文化氛围、生动有趣的案例、跨专业的广阔的视野、以及深入实用的技术综合。

同时作为一门传授软件专门知识的MOOC课程，本次课程将为具有编程能力的同学带来有趣的软件开发项目作业，在实际的软件开发中感受学以致用的快乐，体会面向对象方法学的深刻内涵。

本次课程仍将邀请面向对象领域著名学者北京大学信息科学技术学院邵维忠教授和麻志毅副教授讲解某些章节，并对面向对象方法学中的某些关键问题进行讨论。",4668.0,6941.0,4.5,12.0
高级数据结构与算法,https://www.coursera.org/learn/gaoji-shuju-jiegou,Computer Science,Algorithms,Prof. Ming Zhang 张铭,"学习了基本的数据结构后，我们已经可以用程序来解决现实中的一些问题了。但是，怎样提升程序在运行效率呢？

如何快速地把图书按序号从小到大整理好？如何通过一个ID编号在数据库中高效地查找相对应的信息？如何迅速找到所有内容中含有“数据结构”的文档？《高级数据结构与算法》将通过使用高级的数据结构和高效的算法，让你学会如何解决这些对运行时间要求比较严格的问题。
	高级数据结构和算法能够根据实际情况，满足一些复杂问题对数据规模、运行时间的要求，帮助我们更有效地解决问题。当我们面对实际问题的时候，高级数据结构和算法让我们有更广泛的空间，选择出与问题本身最为契合的数据结构，并利用相关算法来提升运行效率。
	完成这门课之时，你将掌握多维数组、广义表、Trie树、AVL树、伸展树等高级数据结构，并结合内排序、外排序、检索、索引有关的算法，高效地解决现实生活中一些比较复杂的应用问题。合理使用这些高级数据结构和相关算法是程序运行效率的关键因素，学好这门课会让你在之后的计算机专业课程以及项目设计中更得心应手，同时也将让你站在更高的角度去理解问题、设计程序。",13379.0,3762.0,4.3,105.0
